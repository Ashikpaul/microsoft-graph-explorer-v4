pool:
  vmImage: 'vs2017-win2016'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'

  - script: |
      npm run lint
    displayName: 'Runs linting checks'

  - script: |
      npm test -- --coverage
    displayName: 'Runs tests'

  - script: |
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      npm run build
    env:
      REACT_APP_CLIENT_ID: $(REACT_APP_PROD_CLIENT_ID)
    displayName: 'Building production assets'

  - script: |
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
      npm run build
    env:
      REACT_APP_CLIENT_ID: $(REACT_APP_STAGING_CLIENT_ID)
    displayName: 'Build staging assets'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: 'coverage/clover.xml'
      reportDirectory: 'coverage'

  - task: DeleteFiles@1
    inputs:
      contents: node_modules

  - task: AzureRmWebAppDeployment@3
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    inputs:
      azureSubscription: 'Graph-Explorer-ARM'
      WebAppName: 'graphTryIt-staging'
      Package: '$(System.DefaultWorkingDirectory)'
      GenerateWebConfig: true
      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
    displayName: 'Staging deployment'

  # - task: FtpUpload@2
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  #   inputs:
  #     credentialsOption: 'inputs'
  #     serverUrl: $(FTP_SERVER_URL)
  #     username: $(FTP_USERNAME)
  #     password: $(FTP_PASSWORD)
  #     rootDirectory: '$(Build.SourcesDirectory)/build'
  #     filePatterns: '**'
  #     remoteDirectory: '/site/wwwroot/build'
  #   displayName: 'Copying into build folder'

  # - task: FtpUpload@2
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  #   inputs:
  #     credentialsOption: 'inputs'
  #     serverUrl: $(FTP_SERVER_URL)
  #     username: $(FTP_USERNAME)
  #     password: $(FTP_PASSWORD)
  #     rootDirectory: '$(Build.SourcesDirectory)/build/static'
  #     filePatterns: '**'
  #     remoteDirectory: '/site/wwwroot/build/static'
  #   displayName: 'Copying into static folder'

  # - task: FtpUpload@2
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
  #   inputs:
  #     credentialsOption: 'inputs'
  #     serverUrl: $(FTP_SERVER_URL)
  #     username: $(FTP_USERNAME)
  #     password: $(FTP_PASSWORD)
  #     rootDirectory: '$(Build.SourcesDirectory)/build/static/js'
  #     filePatterns: '**'
  #     remoteDirectory: '/site/wwwroot/build/static/js'
  #   displayName: 'Copying into static js folder'

  # - task: FtpUpload@2
    # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
    # inputs:
    #   credentialsOption: 'inputs'
    #   serverUrl: $(FTP_SERVER_URL)
    #   username: $(FTP_USERNAME)
    #   password: $(FTP_PASSWORD)
    #   rootDirectory: '$(Build.SourcesDirectory)/build/static/css'
    #   filePatterns: '**'
    #   remoteDirectory: '/site/wwwroot/build/static/css'
    # displayName: 'Copying into static css folder'

  - task: AzureRmWebAppDeployment@3
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      azureSubscription: 'Graph-Explorer-ARM'
      WebAppName: 'graphTryIt'
      Package: '$(System.DefaultWorkingDirectory)'
      GenerateWebConfig: true
      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
    displayName: 'Production deployment'

