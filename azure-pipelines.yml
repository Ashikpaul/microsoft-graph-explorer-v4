pool:
  vmImage: 'vs2017-win2016'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
    displayName: 'npm install'
  - script: |
      npm run lint
    displayName: 'Runs linting checks'

  - script: |
      npm test -- --coverage
    displayName: 'Runs tests'

  - script: |
      npm run build
    env:
      REACT_APP_CLIENT_ID: $(REACT_APP_CLIENT_ID)
    displayName: 'Build'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: 'coverage/clover.xml'
      reportDirectory: 'coverage'

  - task: CopyFiles@2
    inputs:
      sourceFolder: 'build'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'build'
      publishLocation: 'Container'
    #targetPath: # Required when publishLocation == FilePath

#  - task: AzureRmWebAppDeployment@3
#    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
#    inputs:
#      azureSubscription: 'Graph-Explorer-ARM'
#      WebAppName: 'graphTryIt-staging'
#      Package: '$(System.DefaultWorkingDirectory)'
#      GenerateWebConfig: true
#      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
#    displayName: 'Staging deployment'
#
#  - task: AzureRmWebAppDeployment@3
#    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#    inputs:
#      azureSubscription: 'Graph-Explorer-ARM'
#      WebAppName: 'graphTryIt'
#      Package: '$(System.DefaultWorkingDirectory)'
#      GenerateWebConfig: true
#      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
#    displayName: 'Production deployment'

