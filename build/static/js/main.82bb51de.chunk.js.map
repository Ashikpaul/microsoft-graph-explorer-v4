{"version":3,"sources":["app/services/graph-constants.ts","app/services/graph-client/HelloAuthProvider.ts","app/services/redux-constants.ts","app/services/actions/auth-action-creators.ts","app/services/actions/request-history-action-creators.ts","app/services/actions/theme-action-creator.ts","themes/index.ts","themes/dark.ts","themes/light.ts","themes/high-contrast.ts","themes/theme-context.ts","types/action.ts","app/services/actions/error-action-creator.ts","store/cache.ts","app/views/sidebar/history/historyUtil.ts","app/services/graph-client/graph-client.ts","app/services/actions/query-loading-action-creators.ts","app/services/actions/query-action-creator-util.ts","app/services/actions/query-action-creators.ts","app/services/actions/query-input-action-creators.ts","app/services/actions/request-headers-action-creators.ts","app/services/actions/toggle-sidebar-action-creator.ts","app/views/App.styles.ts","app/views/classnames.ts","app/views/authentication/Authentication.styles.ts","app/services/actions/profile-action-creators.ts","app/views/authentication/profile/Profile.tsx","app/views/authentication/Authentication.tsx","app/views/common/image/Image.tsx","app/views/common/monaco/Monaco.tsx","app/services/actions/adaptive-cards-action-creator.ts","app/views/query-response/adaptive-cards/AdaptiveCard.tsx","app/views/query-response/adaptive-cards/AdaptiveHostConfig.ts","app/services/actions/snippet-action-creator.ts","app/views/query-response/snippets/snippets-helper.tsx","app/views/query-response/snippets/Snippets.tsx","app/views/query-response/QueryResponse.tsx","app/views/common/submit-button/SubmitButton.tsx","app/views/query-runner/QueryInput.tsx","app/views/query-runner/request/HeadersList.tsx","app/views/query-runner/request/RequestHeaders.tsx","app/views/query-runner/request/Request.tsx","app/views/query-runner/QueryRunner.tsx","app/views/sidebar/Sidebar.styles.ts","app/views/sidebar/history/History.tsx","app/services/actions/samples-action-creators.ts","app/views/sidebar/sample-queries/SampleQueries.tsx","app/views/sidebar/Sidebar.tsx","app/views/App.tsx","app/views/query-runner/util/iframe-message-parser.ts","messages/index.js","app/middleware/localStorageMiddleware.ts","app/services/reducers/adaptive-cards-reducer.ts","app/views/sidebar/sample-queries/queries.ts","app/services/reducers/samples-reducers.ts","app/services/reducers/toggle-sidebar-reducer.ts","app/services/reducers/index.ts","app/services/reducers/auth-reducers.ts","app/services/reducers/graph-explorer-mode-reducer.ts","app/services/reducers/query-runner-reducers.ts","app/services/reducers/request-headers-reducers.ts","app/services/reducers/request-history-reducers.ts","app/services/reducers/query-loading-reducers.ts","app/services/reducers/query-runner-error.ts","app/services/reducers/query-input-reducers.ts","app/services/reducers/snippet-reducer.ts","app/services/reducers/theme-reducer.ts","store/index.ts","index.tsx"],"names":["GRAPH_URL","USER_INFO_URL","concat","USER_PICTURE_URL","AUTH_URL","DEFAULT_USER_SCOPES","HelloAuthProvider","_this","this","Object","classCallCheck","hello","options","process","init","msft","oauth","version","auth","grant","scope_delim","form","msft_admin_consent","redirect_uri","window","location","pathname","scope","setInterval","refreshAccessToken","createClass","key","value","login","display","state","nonce","getAuthResponse","logout","accessToken","access_token","Promise","resolve","error","_refreshAccessToken","asyncToGenerator","regenerator_default","a","mark","_callee","token","decodedToken","currentTime","hasExpired","loginProperties","wrap","_context","prev","next","getAccessToken","sent","abrupt","signOut","jwtDecode","Date","getTime","exp","response_type","response_mode","prompt","login_hint","unique_name","domain_hint","stop","apply","arguments","QUERY_GRAPH_SUCCESS","QUERY_GRAPH_ERROR","CLEAR_QUERY_ERROR","GET_AUTH_TOKEN_SUCCESS","LOGOUT_SUCCESS","QUERY_GRAPH_RUNNING","HEADER_ADD_SUCCESS","HEADER_REMOVE_SUCCESS","SET_GRAPH_EXPLORER_MODE_SUCCESS","SET_SAMPLE_QUERY_SUCCESS","PROFILE_REQUEST_SUCCESS","PROFILE_REQUEST_ERROR","GET_SNIPPET_SUCCESS","REMOVE_HISTORY_ITEM_SUCCESS","ADD_HISTORY_ITEM_SUCCESS","VIEW_HISTORY_ITEM_SUCCESS","CLEAR_RESPONSE","SAMPLES_FETCH_SUCCESS","SAMPLES_FETCH_ERROR","SAMPLES_FETCH_PENDING","CHANGE_THEME_SUCCESS","TOGGLE_SIDEBAR_SUCCESS","FETCH_ADAPTIVE_CARD_SUCCESS","FETCH_ADAPTIVE_CARD_PENDING","FETCH_ADAPTIVE_CARD_ERROR","getAuthTokenSuccess","response","type","signOutSuccess","dispatch","setGraphExplorerMode","mode","addHistoryItem","removeHistoryItem","viewHistoryItem","changeTheme","themes","dark","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","light","high-contrast","loadGETheme","theme","selected","loadTheme","Mode","ThemeContext","createContext","queryResponseError","clearQueryError","writeData","_x","_writeData","data","historyItems","items","readData","toConsumableArray","localforage","setItem","_readData","_callee2","_context2","getItem","createHarPayload","query","queryResult","JSON","stringify","result","harPayload","startedDateTime","createdAt","toString","time","duration","method","url","cookies","queryString","name","status","statusText","content","text","size","length","mimeType","request","headers","responseHeaders","sendTime","waitTime","receiveTime","httpVersion","body","assign","postData","GraphClient","clientOptions","authProvider","Client","initWithMiddleware","client","createClient","queryRunningStatus","queryResponse","graphUrl","sampleHeaders","sampleUrl","forEach","header","objectSpread","Authorization","Content-Type","selectedVerb","fetch","authenticatedRequest","makeRequest","isImageResponse","contentType","substr","parseResponse","resp","respHeaders","val","full","get","delimiterPos","indexOf","getContentType","json","httpVerb","_ref","getInstance","api","responseType","ResponseType","RAW","t0","post","sampleBody","put","patch","delete","_x3","_x4","runQuery","getState","tokenPresent","authToken","toISOString","then","processResponse","_x2","_anonymousRequest","anonymousRequest","_ref2","_x5","_x6","_processResponse","_callee3","_context3","createHistory","ok","_callee4","historyItem","har","_context4","clone","arrayBuffer","log","creator","entries","payload","headersSize","bodySize","redirectURL","cache","timings","send","wait","receive","connection","setSampleQuery","addRequestHeader","removeRequestHeader","toggleSidebar","classNames","styles","classNamesFunction","getClassNames","authenticationStyles","authenticationContainer","justifyContent","signInButton","textTransform","profile","marginBottom","spacing","s1","width","profileRequestSuccess","profileRequestError","getProfileInfo","Profile","_Component","props","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","actions","jsonUserInfo","userInfo","imageUrl","userPicture","buffer","blob","user","t1","Blob","URL","createObjectURL","t2","displayName","emailAddress","mail","userPrincipalName","profileImageUrl","setState","getInitials","n","parts","substring","split","initials","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","part","err","return","handleSignOut","inherits","_this2","persona","imageInitials","secondaryText","classes","menuProperties","shouldFocusOnMount","alignTargetEdge","href","target","iconProps","iconName","onClick","react_default","createElement","className","ActionButton","ariaLabel","role","menuProps","Persona","PersonaSize","size40","Component","styledProfile","styled","connect","bindActionCreators","profileActionCreators","authActionCreators","Authentication","signIn","Stack","Item","align","profile_Profile","StyledAuthentication","Image","_componentDidMount","_this$props","alt","style","src","editorDidMount","editor","getModel","getValue","formatDocument","onDidChangeModelContent","getAction","run","Monaco","onChange","verb","language","verbIsGet","FocusZone","disabled","Consumer","react_monaco_editor_lib_default","height","lineNumbers","automaticLayout","minimap","enabled","scrollbar","horizontalHasArrows","horizontal","horizontalScrollbarSize","getAdaptiveCardSuccess","getAdaptiveCardError","getAdaptiveCard","sampleQuery","templateFileName","lookupTemplate","fetchResult","template","AdaptiveCardsTemplateAPI","context","$root","card","expand","catch","urlObject","replace","search","templateMap","me","me/manager","me/drive/root/children","AdaptiveCard","adaptiveCard","AdaptiveCardsAPI","hostConfig","nextProps","_this$props2","_this$props$card","pending","parse","renderedCard","render","minHeight","maxHeight","overflowY","ref","firstChild","appendChild","replaceChild","color","message","darkThemeHostConfig","containerStyles","default","foregroundColors","subtle","highlightColors","accent","good","warning","attention","backgroundColor","emphasis","lightThemeHostConfig","getSnippet","sample","obj","Snippet","toLowerCase","useSelector","shallowEqual","snippet","snippets","_useState","useState","_useState2","slicedToArray","loadingState","setLoadingState","useDispatch","useEffect","Snippets","Pivot","supportedLanguages","map","PivotItem","headerText","renderSnippets","QueryResponse","messages","intl","graphResponse","pivotItems","Image_Image","padding","Complete","push","adaptive_cards_AdaptiveCard","WithIntl","injectIntl","appTheme","graphExplorerMode","SubmitButtonControl","handleOnClick","submitting","PrimaryButton","index_es","id","Fragment","Spinner","SpinnerSize","small","QueryInput","handleOnRunQuery","handleOnMethodChange","handleOnUrlChange","handleOnBlur","httpMethods","Dropdown","selectedKey","TryIt","event","TextField","placeholder","defaultValue","onBlur","SubmitButton","HeadersList","handleOnHeaderDelete","headerItems","filter","react","DetailsList","setKey","columns","fieldName","minWidth","maxWidth","onRenderItemColumn","item","index","column","fieldContent","IconButton","title","selectionMode","SelectionMode","none","RequestHeaders","handleOnHeaderNameChange","headerName","handleOnHeaderValueChange","headerValue","handleOnHeaderAdd","_this$state","newHeaders","Key","Value","request_HeadersList","headersAdded","headersActionCreators","Request","handleOnEditorChange","request_RequestHeaders","QueryRunner","option","onSelectVerb","newQuery","isLoadingData","query_runner_QueryInput","request_Request","queryActionCreators","queryInputActionCreators","sidebarStyles","searchBox","marginTop","spinner","alignItems","queryList","cursor","overflowX","fontSize","FontSizes","medium","background","pullLeft","float","groupHeader","position","groupHeaderRow","lineHeight","textAlign","paddingTop","paddingRight","paddingBottom","paddingLeft","groupHeaderRowIcon","fontWeight","FontWeights","groupTitle","semibold","whiteSpace","textOverflow","outline","headerCount","queryRow","queryContent","rowDisabled","badge","bold","docLink","verticalAlign","History","generateGroupedList","history","componentDidUpdate","prevProps","searchValueChanged","keyword","filteredSamples","includes","formatDate","date","year","getFullYear","month","getMonth","day","getDate","renderRow","DetailsRow","renderItemColumn","hostId","getId","currentTheme","getTheme","green","red","itemType","ContextualMenuItemType","Header","onViewQuery","onRunQuery","onDeleteQuery","TooltipHost","calloutProps","gapSpace","root","aria-labelledby","renderGroupHeader","aria-label","group","onToggleCollapse","isCollapsed","count","groupedList","categories","today","yesterdaysDate","setDate","yesterday","element","category","sort","property","sortOrder","first","second","dynamicSort","Map","getItems","previousCount","_loop","has","set","startIndex","SearchBox","groups","groupProps","showEmptyGroups","onRenderHeader","onRenderRow","onRenderDetailsHeader","renderDetailsHeader","styledHistory","requestHistoryActionCreators","fetchSamplesSuccess","fetchSamplesError","fetchSamplesPending","fetchSamples","res","sampleQueries","products","SampleQueries","queries","samples","generateSamples","humanName","onDocumentationLinkClicked","open","getMethodStyle","toUpperCase","orangeLighter","yellowDark","blue","selectionDisabled","data-selection-disabled","_this$props$samples","large","label","ariaLive","labelPosition","selection","Selection","onSelectionChanged","selectedQuery","getSelection","requestUrl","postBody","MessageBar","messageBarType","MessageBarType","isMultiline","dismissButtonAriaLabel","layoutMode","DetailsListLayoutMode","justified","styledSampleQueries","samplesActionCreators","Sidebar","itemIcon","sample_queries_SampleQueries","history_History","App","mediaQueryList","matchMedia","displayToggleButton","addListener","hostOrigin","URLSearchParams","originIsWhitelisted","parent","postMessage","addEventListener","receiveMessage","base64Token","getAll","atob","sampleVerb","handleThemeChangeMsg","msg","msgEvent","handleInitMsg","_parse","httpRequestMessage","domains","urlParts","sampleDomain","domain","extractUrl","SPACE","NEWLINE","newlineCount","positionOfSecondNewLine","word","i","test","char","nextChar","spl","trim","extractHeaders","OPEN_BRACE","current","previousCharIsNewLine","currentCharIsOpeningBrace","start","extractBody","reduce","code","handleSelectVerb","setTimeout","requestHeaders","keys","values","sidebarProperties","properties","showSidebar","showToggle","matches","removeEventListener","removeListener","displayContent","layout","Provider","FocusTrapZone","app","sidebar","sidebarToggle","Sidebar_Sidebar","authentication_Authentication","toGraphExplorer","tabIndex","query_runner_QueryRunner","onDismiss","query_response_QueryResponse","StyledApp","semanticColors","bodyBackground","bodyText","tryItMessage","borderRight","queryRunnerError","receivedSampleQuery","newTheme","disp","src_messages","en-US","de-DE","es-ES","fr-FR","ja-JP","pt-BR","ru-RU","zh-CN","localStorageMiddleware","store","action","localStorage","initialState","skipTest","tip","combineReducers","compare","findIndex","middlewares","createLogger","level","collapsed","thunkMiddleware","document","getElementById","parentElement","removeChild","initializeIcons","appState","createStore","reducers","applyMiddleware","hostDocumentLocale","geLocale","de-de","en-us","es-es","fr-fr","ja-jp","pt-br","ru-ru","zh-cn","addLocaleData","br","de","en","fr","jp","ru","zh","es","ReactDOM","react_redux_es","locale","views_App"],"mappings":"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","file":"static/js/main.82bb51de.chunk.js","sourcesContent":["export const GRAPH_URL = 'https://graph.microsoft.com';\nexport const USER_INFO_URL = `${GRAPH_URL}/v1.0/me`;\nexport const USER_PICTURE_URL = `${GRAPH_URL}/v1.0/me/photo/$value`;\nexport const AUTH_URL = 'https://login.microsoftonline.com';\nexport const ADMIN_AUTH_URL = 'https://signIn.microsoftonline.com/common/adminconsent';\nexport const TOKEN_URL = 'https://signIn.microsoftonline.com/common/oauth2/v2.0/token';\nexport const DEFAULT_USER_SCOPES = 'openid profile User.ReadWrite User.ReadBasic.All Sites.ReadWrite.All ' +\n  'Contacts.ReadWrite People.Read Notes.ReadWrite.All Tasks.ReadWrite Mail.ReadWrite Files.ReadWrite.All' +\n  ' Calendars.ReadWrite';\n","import { AuthenticationProvider } from '@microsoft/microsoft-graph-client';\nimport jwtDecode from 'jwt-decode';\n\nimport hello from 'hellojs';\nimport { AUTH_URL, DEFAULT_USER_SCOPES } from '../graph-constants';\n\nexport class HelloAuthProvider implements AuthenticationProvider {\n  public hello: any;\n\n  constructor() {\n    const options = {\n      authUrl: AUTH_URL,\n      clientId: process.env.REACT_APP_CLIENT_ID,\n    };\n\n    this.hello = hello;\n\n    this.hello.init({\n      msft: {\n        oauth: {\n          version: 2,\n          auth: options.authUrl + '/common/oauth2/v2.0/authorize',\n          grant: options.authUrl + '/common/oauth2/v2.0/token',\n        },\n        scope_delim: ' ',\n\n        // Don't even try submitting via form.\n        // This means no POST operations in <=IE9\n        form: false,\n      }, msft_admin_consent: {\n        oauth: {\n          version: 2,\n          auth: options.authUrl + '/common/adminconsent',\n          grant: options.authUrl + '/common/oauth2/v2.0/token',\n        },\n        scope_delim: ' ',\n\n        // Don't even try submitting via form.\n        // This means no POST operations in <=IE9\n        form: false,\n      },\n    } as any);\n\n    this.hello.init({\n      msft: options.clientId,\n      msft_admin_consent: options.clientId,\n    }, {\n      redirect_uri: window.location.pathname,\n      scope: DEFAULT_USER_SCOPES,\n    });\n\n    setInterval(() => this.refreshAccessToken(), 1000);\n  }\n\n  public signIn() {\n    const loginProperties = {\n      display: 'page',\n      state: 'abcd',\n      nonce: 'graph_explorer',\n    };\n\n    // @ts-ignore\n    this.hello('msft').login(loginProperties);\n  }\n\n  public signOut() {\n    const session = this.hello('msft').getAuthResponse('msft');\n\n    if (session) {\n      this.hello('msft').logout();\n    }\n  }\n\n  public  getAccessToken(): Promise<any> {\n    try {\n      const accessToken = this.hello('msft')\n        .getAuthResponse('msft')\n        .access_token;\n      return Promise.resolve(accessToken);\n    } catch (error) {\n      return Promise.resolve(null);\n    }\n  }\n\n  public async refreshAccessToken() {\n      const token = await this.getAccessToken();\n\n      if (!token) {\n        return this.signOut();\n      }\n\n      const decodedToken: any = jwtDecode(token);\n      const currentTime = (new Date()).getTime() / 1000;\n      const hasExpired = currentTime > decodedToken.exp;\n\n      const loginProperties = {\n        display: 'none',\n        response_type: 'token',\n        response_mode: 'fragment',\n        nonce: 'graph_explorer',\n        prompt: 'none',\n        scope: DEFAULT_USER_SCOPES,\n        login_hint: decodedToken.unique_name,\n        domain_hint: 'organizations',\n      };\n\n      if (hasExpired) {\n        this.hello('msft').login(loginProperties);\n      }\n  }\n}\n","export const QUERY_GRAPH_SUCCESS = 'QUERY_GRAPH_SUCCESS';\nexport const QUERY_GRAPH_ERROR = 'QUERY_GRAPH_ERROR';\nexport const CLEAR_QUERY_ERROR = 'CLEAR_QUERY_ERROR';\nexport const GET_AUTH_TOKEN_SUCCESS = 'GET_AUTH_TOKEN_SUCCESS';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const QUERY_GRAPH_RUNNING = 'QUERY_GRAPH_RUNNING';\nexport const HEADER_ADD_SUCCESS = 'HEADER_ADD_SUCCESS';\nexport const HEADER_REMOVE_SUCCESS = 'HEADER_REMOVE_SUCCESS';\nexport const SET_GRAPH_EXPLORER_MODE_SUCCESS = 'SET_GRAPH_EXPLORER_MODE_SUCCESS';\nexport const SET_SAMPLE_QUERY_SUCCESS = 'SET_SAMPLE_QUERY_SUCCESS';\nexport const PROFILE_REQUEST_SUCCESS = 'PROFILE_REQUEST_SUCCESS';\nexport const PROFILE_REQUEST_ERROR = 'PROFILE_REQUEST_ERROR';\nexport const GET_SNIPPET_SUCCESS = 'GET_SNIPPET_SUCCESS';\nexport const REMOVE_HISTORY_ITEM_SUCCESS = 'REMOVE_HISTORY_ITEM_SUCCESS';\nexport const ADD_HISTORY_ITEM_SUCCESS = 'ADD_HISTORY_ITEM_SUCCESS';\nexport const GET_HISTORY_ITEMS_SUCCESS = 'GET_HISTORY_ITEMS_SUCCESS';\nexport const VIEW_HISTORY_ITEM_SUCCESS = 'VIEW_HISTORY_ITEM_SUCCESS';\nexport const CLEAR_RESPONSE = 'CLEAR_RESPONSE';\nexport const SAMPLES_FETCH_SUCCESS = 'SAMPLES_FETCH_SUCCESS';\nexport const SAMPLES_FETCH_ERROR = 'SAMPLES_FETCH_ERROR';\nexport const SAMPLES_FETCH_PENDING = 'SAMPLES_FETCH_PENDING';\nexport const CHANGE_THEME_SUCCESS = 'CHANGE_THEME_SUCCESS';\nexport const TOGGLE_SIDEBAR_SUCCESS = 'TOGGLE_SIDEBAR_SUCCESS';\nexport const FETCH_ADAPTIVE_CARD_SUCCESS = 'FETCH_ADAPTIVE_CARD_SUCCESS';\nexport const FETCH_ADAPTIVE_CARD_PENDING = 'FETCH_ADAPTIVE_CARD_PENDING';\nexport const FETCH_ADAPTIVE_CARD_ERROR = 'FETCH_ADAPTIVE_CARD_ERROR';\n","import { IAction, Mode } from '../../../types/action';\nimport { HelloAuthProvider } from '../graph-client/HelloAuthProvider';\nimport { GET_AUTH_TOKEN_SUCCESS, LOGOUT_SUCCESS, SET_GRAPH_EXPLORER_MODE_SUCCESS } from '../redux-constants';\n\nexport function getAuthTokenSuccess(response: string): IAction {\n  return {\n    type: GET_AUTH_TOKEN_SUCCESS,\n    response,\n  };\n}\n\nexport function signOutSuccess(response: string): IAction {\n  return {\n    type: LOGOUT_SUCCESS,\n    response,\n  };\n}\n\nexport function signOut() {\n  new HelloAuthProvider()\n    .signOut();\n  return (dispatch: Function) => dispatch(signOutSuccess(''));\n}\n\nexport function setGraphExplorerMode(mode: Mode) {\n  return {\n    type: SET_GRAPH_EXPLORER_MODE_SUCCESS,\n    response: mode,\n  };\n}\n","import { Dispatch } from 'redux';\nimport { IHistoryItem } from '../../../types/history';\nimport { ADD_HISTORY_ITEM_SUCCESS, QUERY_GRAPH_SUCCESS,\n  REMOVE_HISTORY_ITEM_SUCCESS, VIEW_HISTORY_ITEM_SUCCESS } from '../redux-constants';\n\nexport function addHistoryItem(response: IHistoryItem): any {\n  return {\n    type: ADD_HISTORY_ITEM_SUCCESS,\n    response,\n  };\n}\nexport function removeHistoryItem(response: IHistoryItem): any {\n  return {\n    type: REMOVE_HISTORY_ITEM_SUCCESS,\n    response,\n  };\n}\nexport function viewHistoryItem(response: IHistoryItem): any {\n  return {\n    type: VIEW_HISTORY_ITEM_SUCCESS,\n    response,\n  };\n}\n","import { IAction } from '../../../types/action';\nimport { CHANGE_THEME_SUCCESS } from '../redux-constants';\nexport function changeTheme(response: string): IAction {\n  return {\n    type: CHANGE_THEME_SUCCESS,\n    response,\n  };\n}\n\n\n","import { IPartialTheme, loadTheme } from '@uifabric/styling';\n\nimport { dark } from './dark';\nimport { highContrast } from './high-contrast';\nimport { light } from './light';\n\nconst themes: any = {\n  dark,\n  light,\n  'high-contrast': highContrast,\n};\n\nexport function loadGETheme(theme: string): void {\n  const selected: IPartialTheme = themes[theme];\n  loadTheme(selected);\n}\n","// Theme generated from https://developer.microsoft.com/en-us/fabric#/styles/themegenerator\nexport const dark = {\n  palette: {\n    themePrimary: '#2196f0',\n    themeLighterAlt: '#01060a',\n    themeLighter: '#051826',\n    themeLight: '#0a2d48',\n    themeTertiary: '#145a90',\n    themeSecondary: '#1e84d3',\n    themeDarkAlt: '#37a0f1',\n    themeDark: '#54aef3',\n    themeDarker: '#80c3f6',\n    neutralLighterAlt: '#121212',\n    neutralLighter: '#1c1c1c',\n    neutralLight: '#2c2c2c',\n    neutralQuaternaryAlt: '#353535',\n    neutralQuaternary: '#3d3d3d',\n    neutralTertiaryAlt: '#5e5e5e',\n    neutralTertiary: '#fdfdfd',\n    neutralSecondary: '#fefefe',\n    neutralPrimaryAlt: '#fefefe',\n    neutralPrimary: '#fdfcfc',\n    neutralDark: '#fefefe',\n    black: '#ffffff',\n    white: '#070707',\n  },\n};\n","// Theme generated from https://developer.microsoft.com/en-us/fabric#/styles/themegenerator\n\nexport const light = {\n  palette: {\n    themePrimary: '#0078d4',\n    themeLighterAlt: '#eff6fc',\n    themeLighter: '#deecf9',\n    themeLight: '#c7e0f4',\n    themeTertiary: '#71afe5',\n    themeSecondary: '#2b88d8',\n    themeDarkAlt: '#106ebe',\n    themeDark: '#005a9e',\n    themeDarker: '#004578',\n    neutralLighterAlt: '#f8f8f8',\n    neutralLighter: '#f4f4f4',\n    neutralLight: '#eaeaea',\n    neutralQuaternaryAlt: '#dadada',\n    neutralQuaternary: '#d0d0d0',\n    neutralTertiaryAlt: '#c8c8c8',\n    neutralTertiary: '#c2c2c2',\n    neutralSecondary: '#858585',\n    neutralPrimaryAlt: '#4b4b4b',\n    neutralPrimary: '#333333',\n    neutralDark: '#272727',\n    black: '#1d1d1d',\n    white: '#ffffff',\n  },\n};\n","export const highContrast = {\n  palette: {\n    themePrimary: '#feff00',\n    themeLighterAlt: '#0a0a00',\n    themeLighter: '#292900',\n    themeLight: '#4d4d00',\n    themeTertiary: '#999900',\n    themeSecondary: '#e0e000',\n    themeDarkAlt: '#ffff19',\n    themeDark: '#ffff3d',\n    themeDarker: '#ffff70',\n    neutralLighterAlt: '#000000',\n    neutralLighter: '#000000',\n    neutralLight: '#000000',\n    neutralQuaternaryAlt: '#000000',\n    neutralQuaternary: '#000000',\n    neutralTertiaryAlt: '#000000',\n    neutralTertiary: '#c8c8c8',\n    neutralSecondary: '#d0d0d0',\n    neutralPrimaryAlt: '#dadada',\n    neutralPrimary: '#ffffff',\n    neutralDark: '#f4f4f4',\n    black: '#f8f8f8',\n    white: '#000000',\n  }\n};\n","import { createContext } from 'react';\n\nexport const ThemeContext = createContext('light');\n","export interface IAction {\n  type: string;\n  response: object | string;\n}\n\nexport enum Mode {\n  TryIt = 'TRYIT',\n  Complete = 'COMPLETE',\n}\n","import { Dispatch } from 'redux';\nimport { IAction } from '../../../types/action';\nimport { CLEAR_QUERY_ERROR, CLEAR_RESPONSE, QUERY_GRAPH_ERROR } from '../redux-constants';\n\nexport function queryResponseError(response: object): IAction {\n  return {\n    type: QUERY_GRAPH_ERROR,\n    response,\n  };\n}\n\nexport function clearResponse() {\n  return {\n    type: CLEAR_RESPONSE\n  };\n}\n\n\nexport function clearQueryError(): Function {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: CLEAR_QUERY_ERROR\n    });\n  };\n}\n\n","import localforage from 'localforage';\nimport { IHistoryItem } from '../types/history';\n\nconst key = 'history';\n\nexport async function writeData  (data: IHistoryItem) {\n  const historyItems: IHistoryItem[] = await readData();\n  const items = [...historyItems, data];\n  localforage.setItem(key, items);\n}\n\nexport async function readData(): Promise<IHistoryItem[]> {\n  const data: IHistoryItem[] = await localforage.getItem(key);\n  return data || [];\n}\n\nexport async function removeData(data: IHistoryItem) {\n  const historyItems: IHistoryItem[] = await readData();\n  const items = historyItems.filter(history => history !== data);\n  localforage.setItem(key, items);\n}\n\nexport function clear  () { localforage.clear(); }\n","import { IHarFormat, IHarPayload } from '../../../../types/har';\nimport { IHistoryItem } from '../../../../types/history';\n\nexport function createHarPayload(query: IHistoryItem) {\n  const queryResult = JSON.stringify(query.result);\n\n  let harPayload = {\n    startedDateTime: query.createdAt.toString(),\n    time: query.duration,\n    method: query.method,\n    url: query.url,\n    cookies: [],\n    queryString: [{ name: '', value: '' }],\n    status: query.status,\n    statusText: query.statusText,\n    content: {\n      text: queryResult,\n      size: queryResult.length,\n      mimeType: 'application/json',\n    },\n    request: {\n      headers: query.headers,\n    },\n    response:\n    {\n      headers: query.responseHeaders\n    },\n    sendTime: 0,\n    waitTime: 0,\n    receiveTime: 0,\n    httpVersion: 'HTTP/1.1',\n  };\n\n  if (query.body) {\n    harPayload = Object.assign(harPayload, { //tslint:disable-line\n      postData: {\n        mimeType: 'application/json',\n        text: query.body,\n      },\n    });\n  }\n  return harPayload;\n}\n\nexport function generateHar(payload: IHarPayload): IHarFormat {\n  return {\n    log: {\n      version: '2.0',\n      creator: {\n        name: 'Graph Explorer',\n        version: '2.0',\n      },\n      entries: [\n        {\n          startedDateTime: payload.startedDateTime,\n          time: payload.time,\n          request: {\n            method: payload.method,\n            url: payload.url,\n            httpVersion: payload.httpVersion,\n            cookies: payload.cookies,\n            headers: payload.request.headers,\n            queryString: payload.queryString,\n            postData: payload.postData,\n            headersSize: -1,\n            bodySize: -1,\n          },\n          response: {\n            status: payload.status,\n            statusText: payload.statusText,\n            httpVersion: payload.httpVersion,\n            cookies: payload.cookies,\n            headers: payload.response.headers,\n            content: payload.content,\n            redirectURL: '',\n            headersSize: -1,\n            bodySize: -1,\n          },\n          cache: {},\n          timings: {\n            send: payload.sendTime,\n            wait: payload.waitTime,\n            receive: payload.receiveTime,\n          },\n          connection: '',\n        },\n      ],\n    },\n  };\n}\n\nexport function dynamicSort(property: string) {\n  const column = property;\n  let sortOrder = 1;\n  if (column[0] === '-') {\n    sortOrder = -1;\n    property = column.substr(1);\n  }\n  return (first: any, second: any) => {\n    const result = (first[property] < second[property]) ? -1 : (first[property] > second[property]) ? 1 : 0;\n    return result * sortOrder;\n  };\n}\n","import { Client } from '@microsoft/microsoft-graph-client';\nimport { HelloAuthProvider } from './HelloAuthProvider';\n\nexport class GraphClient {\n  private static client: Client;\n\n  private static createClient(): Client {\n    const authProvider = new HelloAuthProvider();\n\n    const clientOptions = {\n      authProvider,\n    };\n\n    return Client.initWithMiddleware(clientOptions);\n  }\n\n  public static getInstance(): Client {\n    if (!GraphClient.client) {\n      GraphClient.client = this.createClient();\n    }\n    return GraphClient.client;\n  }\n}\n","import { QUERY_GRAPH_RUNNING } from '../redux-constants';\n\nexport function queryRunningStatus(response: boolean): any {\n    return {\n      type: QUERY_GRAPH_RUNNING,\n      response,\n    };\n  }","import { ResponseType } from '@microsoft/microsoft-graph-client';\nimport { IAction } from '../../../types/action';\nimport { IQuery } from '../../../types/query-runner';\nimport { IRequestOptions } from '../../../types/request';\nimport { GraphClient } from '../graph-client';\nimport { QUERY_GRAPH_SUCCESS } from '../redux-constants';\nimport { queryRunningStatus } from './query-loading-action-creators';\n\nexport function queryResponse(response: object): IAction {\n  return {\n    type: QUERY_GRAPH_SUCCESS,\n    response,\n  };\n}\n\nexport async function anonymousRequest(dispatch: Function, query: IQuery) {\n\n  const authToken = '{token:https://graph.microsoft.com/}';\n  const graphUrl = `https://proxy.apisandbox.msdn.microsoft.com/svc?url=${query.sampleUrl}`;\n  const sampleHeaders: any = {};\n\n  if (query.sampleHeaders) {\n    query.sampleHeaders.forEach(header => {\n      if (header.name !== '' && header.value !== '') {\n        sampleHeaders[header.name] = header.value;\n      }\n    });\n  }\n\n  const headers = {\n    'Authorization': `Bearer ${authToken}`,\n    'Content-Type': 'application/json',\n    ...sampleHeaders\n  };\n\n  const options: IRequestOptions = { method: query.selectedVerb, headers };\n\n  dispatch(queryRunningStatus(true));\n\n  return fetch(graphUrl, options);\n}\n\nexport function authenticatedRequest(dispatch: Function, query: IQuery) {\n  return makeRequest(query.selectedVerb)(dispatch, query);\n}\n\nexport function isImageResponse(contentType: string) {\n  if (!contentType) { return false; }\n  return (\n    contentType === 'application/octet-stream' ||\n    contentType.substr(0, 6) === 'image/'\n  );\n}\n\nexport function getContentType(headers: Headers) {\n  const full = headers.get('content-type');\n  if (full) {\n    const delimiterPos = full.indexOf(';');\n    if (delimiterPos !== -1) {\n      return full.substr(0, delimiterPos);\n    } else {\n      return full;\n    }\n  }\n}\n\nexport function parseResponse(resp: any, respHeaders: any): Promise<any> {\n  if (resp && resp.headers) {\n    resp.headers.forEach((val: any, key: any) => {\n      respHeaders[key] = val;\n    });\n    const contentType = getContentType(resp.headers);\n    if (contentType && isImageResponse(contentType)) {\n      return resp;\n    } else {\n      return resp.json();\n    }\n  }\n  return resp;\n}\n\nconst makeRequest = (httpVerb: string): Function => {\n  return async (dispatch: Function, query: IQuery) => {\n    const sampleHeaders: any = {};\n\n    if (query.sampleHeaders) {\n      query.sampleHeaders.forEach(header => {\n        if (header.name !== '' && header.value !== '') {\n          sampleHeaders[header.name] = header.value;\n        }\n      });\n    }\n\n    const client = GraphClient.getInstance()\n      .api(query.sampleUrl)\n      .headers(sampleHeaders)\n      .responseType(ResponseType.RAW);\n\n    let response;\n\n    dispatch(queryRunningStatus(true));\n\n    switch (httpVerb) {\n      case 'GET':\n        response = await client.get();\n        break;\n      case 'POST':\n        response = await client.post(query.sampleBody);\n        break;\n      case 'PUT':\n        response = await client.put(query.sampleBody);\n        break;\n      case 'PATCH':\n        response = await client.patch(query.sampleBody);\n        break;\n      case 'DELETE':\n        response = await client.delete();\n        break;\n      default:\n        return;\n    }\n\n    return Promise.resolve(response);\n  };\n};\n","import { writeData } from '../../../store/cache';\nimport { IHistoryItem } from '../../../types/history';\nimport { IQuery } from '../../../types/query-runner';\nimport { createHarPayload, generateHar } from '../../views/sidebar/history/historyUtil';\nimport { queryResponseError } from './error-action-creator';\nimport {\n  anonymousRequest, authenticatedRequest, isImageResponse,\n  parseResponse, queryResponse\n} from './query-action-creator-util';\nimport { addHistoryItem } from './request-history-action-creators';\n\nexport function runQuery(query: IQuery): Function {\n  return (dispatch: Function, getState: Function) => {\n    const tokenPresent = getState().authToken;\n    const respHeaders: any = {};\n    const createdAt = new Date().toISOString();\n\n    if (tokenPresent) {\n      return authenticatedRequest(dispatch, query).then(async (response: Response) => {\n        await processResponse(response, respHeaders, dispatch, createdAt);\n      });\n    }\n\n    return anonymousRequest(dispatch, query).then(async (response: Response) => {\n      await processResponse(response, respHeaders, dispatch, createdAt);\n    });\n  };\n\n  async function processResponse(response: Response, respHeaders: any, dispatch: Function, createdAt: any) {\n\n    const result = await parseResponse(response, respHeaders);\n    createHistory(response, respHeaders, query, createdAt, dispatch, result);\n\n    if (response && response.ok) {\n      return dispatch(queryResponse({\n        body: result,\n        headers: respHeaders\n      }));\n    }\n    else {\n      return dispatch(queryResponseError(response));\n    }\n\n  }\n}\n\nasync function createHistory(response: Response, respHeaders: any, query: IQuery,\n  createdAt: any, dispatch: Function, result: any) {\n  const status = response.status;\n  const statusText = response.statusText;\n  const { duration, contentType } = respHeaders;\n\n  if (isImageResponse(contentType)) {\n    result = await result.clone().arrayBuffer();\n  }\n\n  const historyItem: IHistoryItem = {\n    url: query.sampleUrl,\n    method: query.selectedVerb,\n    headers: query.sampleHeaders,\n    body: query.sampleBody,\n    responseHeaders: respHeaders,\n    createdAt,\n    status,\n    statusText,\n    result,\n    duration,\n    har: ''\n  };\n\n  const harPayload = createHarPayload(historyItem);\n  const har = JSON.stringify(generateHar(harPayload));\n  historyItem.har = har;\n\n  writeData(historyItem);\n\n  dispatch(addHistoryItem(historyItem));\n  return result;\n}\n\n","import { IAction } from '../../../types/action';\nimport { IQuery } from '../../../types/query-runner';\nimport { SET_SAMPLE_QUERY_SUCCESS } from '../redux-constants';\n\nexport function setSampleQuery(response: IQuery): IAction {\n  return {\n    type: SET_SAMPLE_QUERY_SUCCESS,\n    response,\n  };\n}\n","import { IAction } from '../../../types/action';\nimport { HEADER_ADD_SUCCESS, HEADER_REMOVE_SUCCESS } from '../redux-constants';\n\nexport function addRequestHeader(response: object): IAction {\n  return {\n    type: HEADER_ADD_SUCCESS,\n    response,\n  };\n}\n\nexport function removeRequestHeader(response: object): IAction {\n  return {\n    type: HEADER_REMOVE_SUCCESS,\n    response,\n  };\n}\n\n","import { IAction } from '../../../types/action';\nimport { TOGGLE_SIDEBAR_SUCCESS } from '../redux-constants';\n\nexport function toggleSidebar(response: object): IAction {\n  return {\n    type: TOGGLE_SIDEBAR_SUCCESS,\n    response,\n  };\n}\n","import { ITheme } from '@uifabric/styling';\nimport { inherits } from 'util';\n\nexport const appStyles = (theme: ITheme) => {\n  return {\n    app: {\n      background: theme.semanticColors.bodyBackground,\n      color: theme.semanticColors.bodyText,\n      paddingTop: theme.spacing.s1,\n      width: '100%',\n      height: '100vh',\n    },\n    tryItMessage: {\n      marginBottom: theme.spacing.s1\n    },\n    sidebar: {\n      borderRight: 'solid 1px ' + theme.palette.neutralLighter\n    },\n    toGraphExplorer: {\n      color: 'inherit'\n    },\n    sidebarToggle: {\n      marginBottom: theme.spacing.s1,\n    },\n  };\n};\n","import { classNamesFunction, ITheme } from 'office-ui-fabric-react';\n\ninterface IClassNames {\n  theme?: ITheme;\n  styles?: object;\n}\n\nexport function classNames({ styles, theme }: IClassNames): any {\n  const getClassNames = classNamesFunction();\n  return getClassNames(styles, theme);\n}\n","import { ITheme } from '@uifabric/styling';\n\nexport const authenticationStyles = (theme: ITheme) => {\n  return {\n    authenticationContainer: {\n      justifyContent: 'space-between',\n    },\n    signInButton: {\n      textTransform: 'capitalize',\n    },\n    profile: {\n      marginBottom: theme.spacing.s1,\n      width: '100%',\n    },\n  };\n};\n","import { IQuery } from '../../../types/query-runner';\nimport { PROFILE_REQUEST_ERROR, PROFILE_REQUEST_SUCCESS } from '../redux-constants';\nimport { authenticatedRequest, parseResponse } from './query-action-creator-util';\n\nexport function profileRequestSuccess(response: object): any {\n  return {\n    type: PROFILE_REQUEST_SUCCESS,\n    response,\n  };\n}\n\nexport function profileRequestError(response: object): any {\n  return {\n    type: PROFILE_REQUEST_ERROR,\n    response,\n  };\n}\n\nexport function getProfileInfo(query: IQuery): Function {\n  return (dispatch: Function) => {\n    const respHeaders: any = {};\n\n    return authenticatedRequest(dispatch, query).then(async (response: Response) => {\n\n      if (response && response.ok) {\n        const json = await parseResponse(response, respHeaders);\n        return dispatch(\n          profileRequestSuccess({\n            body: json,\n            headers: respHeaders\n          }),\n        );\n      }\n      return dispatch(profileRequestError({ response }));\n    });\n\n  };\n}","import {\n  ActionButton, IPersonaSharedProps, Persona,\n  PersonaSize, styled\n} from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { IProfileProps, IProfileState } from '../../../../types/profile';\nimport * as authActionCreators from '../../../services/actions/auth-action-creators';\nimport * as profileActionCreators from '../../../services/actions/profile-action-creators';\nimport { USER_INFO_URL, USER_PICTURE_URL } from '../../../services/graph-constants';\nimport { classNames } from '../../classnames';\nimport { authenticationStyles } from '../Authentication.styles';\n\nexport class Profile extends Component<IProfileProps, IProfileState> {\n  constructor(props: IProfileProps) {\n    super(props);\n    this.state = {\n      user: {\n        displayName: '',\n        emailAddress: '',\n        profileImageUrl: ''\n      }\n    };\n  }\n\n  public componentDidMount = async () => {\n    const { actions } = this.props;\n\n    const jsonUserInfo = actions\n      ? await actions.getProfileInfo({\n        selectedVerb: 'GET',\n        sampleUrl: USER_INFO_URL\n      })\n      : null;\n\n    const userInfo = jsonUserInfo.response.body;\n\n    let imageUrl = '';\n\n    try {\n      const userPicture = actions\n        ? await actions.getProfileInfo({\n          selectedVerb: 'GET',\n          sampleUrl: USER_PICTURE_URL\n        })\n        : null;\n\n      if (userPicture) {\n        const buffer = await userPicture.response.body.arrayBuffer();\n        const blob = new Blob([buffer], { type: 'image/jpeg' });\n        imageUrl = URL.createObjectURL(blob);\n      }\n    } catch (error) {\n      imageUrl = '';\n    }\n\n    const user = {\n      ...{},\n      displayName: userInfo.displayName,\n      emailAddress: userInfo.mail || userInfo.userPrincipalName,\n      profileImageUrl: imageUrl\n    };\n\n    this.setState({\n      user\n    });\n  };\n\n  public getInitials = (name: string) => {\n    if (name && name !== '') {\n      const n = name.indexOf('(');\n      name = name.substring(0, n !== -1 ? n : name.length);\n      const parts = name.split(' ');\n      let initials = '';\n      for (const part of parts) {\n        if (part.length > 0 && part !== '') {\n          initials += part[0];\n        }\n      }\n      initials = initials.substring(0, 2);\n      return initials;\n    }\n  };\n\n  public handleSignOut = () => {\n    const { actions } = this.props;\n\n    if (actions) {\n      actions.signOut();\n    }\n  }\n\n  public render() {\n    const { user } = this.state;\n\n    const persona: IPersonaSharedProps = {\n      imageUrl: user.profileImageUrl,\n      imageInitials: this.getInitials(user.displayName),\n      text: user.displayName,\n      secondaryText: user.emailAddress,\n    };\n\n    const classes = classNames(this.props);\n\n    const menuProperties = {\n      shouldFocusOnMount: true,\n      alignTargetEdge: true,\n      items: [\n        {\n          key: 'office-dev-program',\n          text: 'Office Dev Program',\n          href: 'https://developer.microsoft.com/en-us/office/dev-program',\n          target: '_blank',\n          iconProps: {\n            iconName: 'CommandPrompt',\n          },\n        },\n        {\n          key: 'sign-out',\n          text: 'Sign Out',\n          onClick: () => this.handleSignOut(),\n          iconProps: {\n            iconName: 'SignOut',\n          },\n        },\n      ]\n    };\n\n    return (\n      <div className={classes.profile}>\n        <ActionButton ariaLabel='profile' role='button' menuProps={menuProperties}>\n          <Persona {...persona} size={PersonaSize.size40} />\n        </ActionButton>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators({\n      ...profileActionCreators,\n      ...authActionCreators\n    }, dispatch)\n  };\n}\n\n// @ts-ignore\nconst styledProfile = styled(Profile, authenticationStyles);\nexport default connect(\n  null,\n  mapDispatchToProps\n)(styledProfile);\n","import { ActionButton, Stack, styled } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { IAuthenticationProps } from '../../../types/authentication';\nimport * as authActionCreators from '../../services/actions/auth-action-creators';\nimport { HelloAuthProvider } from '../../services/graph-client/HelloAuthProvider';\nimport { classNames } from '../classnames';\nimport { authenticationStyles } from './Authentication.styles';\nimport Profile from './profile/Profile';\n\nexport class Authentication extends Component<IAuthenticationProps> {\n  constructor(props: IAuthenticationProps) {\n    super(props);\n  }\n\n  public signIn = async (): Promise<void> => {\n    new HelloAuthProvider().signIn();\n  };\n\n  public render() {\n    const { tokenPresent } = this.props;\n    const classes = classNames(this.props);\n\n    return (\n      <div className={classes.authenticationContainer}>\n        <Stack>\n          <Stack.Item align='end'>\n            {!tokenPresent && <ActionButton\n              ariaLabel='Sign-in button'\n              className={classes.signInButton}\n              role='button'\n              iconProps={{ iconName: 'Contact' }}\n              onClick={this.signIn}>\n              sign in\n              </ActionButton>}\n            {tokenPresent &&\n              <Profile />}\n          </Stack.Item>\n        </Stack>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    tokenPresent: !!state.authToken\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators(authActionCreators, dispatch)\n  };\n}\n\n// @ts-ignore\nconst StyledAuthentication = styled(Authentication, authenticationStyles);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StyledAuthentication);\n","import React, { Component } from 'react';\nimport { IImageComponentProps, IImageComponentState } from '../../../../types/image';\n\nexport class Image extends Component<IImageComponentProps, IImageComponentState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      imageUrl: '',\n    };\n  }\n\n  public async componentDidMount() {\n    const { body } = this.props;\n\n    if (body) {\n      const buffer = await body.clone().arrayBuffer();\n      const blob = new Blob([buffer], { type: 'image/jpeg' });\n      const imageUrl = URL.createObjectURL(blob);\n\n      this.setState({ imageUrl });\n    }\n  }\n\n  public render() {\n    const { imageUrl } = this.state;\n    const { styles, alt } = this.props;\n\n    return (\n      <img style={styles} src={imageUrl} alt={alt} />\n    );\n  }\n}\n","import { FocusZone, getTheme } from 'office-ui-fabric-react';\nimport React from 'react';\nimport MonacoEditor, { ChangeHandler } from 'react-monaco-editor';\n\nimport { ThemeContext } from '../../../../themes/theme-context';\nimport './monaco.scss';\n\ninterface IMonaco {\n  body: object | string | undefined;\n  onChange?: ChangeHandler | undefined;\n  verb?: string;\n  language?: string;\n}\n\nfunction editorDidMount(editor: any) {\n  const editorHasText = !!editor.getModel().getValue();\n\n  if (editorHasText) {\n    formatDocument(editor);\n  }\n\n  editor.onDidChangeModelContent(() => {\n    formatDocument(editor);\n  });\n}\n\nfunction formatDocument(editor: any) {\n  editor.getAction('editor.action.formatDocument').run();\n}\n\nexport function Monaco(props: IMonaco) {\n\n  let { body } = props;\n  const { onChange, verb, language } = props;\n\n  if (body && typeof body !== 'string') {\n    body = JSON.stringify(body);\n  }\n\n  const verbIsGet = verb === 'GET';\n\n  return (\n    <FocusZone disabled={true}>\n      <div className='monaco-editor'>\n        <ThemeContext.Consumer >\n          {(theme) => (<MonacoEditor\n            width='800 !important'\n            height={verbIsGet ? '80vh' : '350px'}\n            // @ts-ignore\n            value={body  ? body : ''}\n            language={language ? language : 'json'}\n            options={{\n              lineNumbers: 'off',\n              automaticLayout: true,\n              minimap: { enabled: false },\n              scrollbar: {\n                horizontalHasArrows: true,\n                horizontal: 'visible',\n                horizontalScrollbarSize: 17,\n              },\n            }}\n            editorDidMount={editorDidMount}\n            onChange={onChange}\n            theme={theme === 'light' ? 'vs' : 'vs-dark'}\n          />)}\n        </ThemeContext.Consumer>\n      </div>\n    </FocusZone>\n  );\n}\n","import * as AdaptiveCardsTemplateAPI from 'adaptivecards-templating';\nimport { IAction } from '../../../types/action';\nimport { IQuery } from '../../../types/query-runner';\nimport {\n  FETCH_ADAPTIVE_CARD_ERROR ,\n  FETCH_ADAPTIVE_CARD_PENDING,\n  FETCH_ADAPTIVE_CARD_SUCCESS\n} from '../redux-constants';\n\nexport function getAdaptiveCardSuccess(result: string = ''): IAction {\n  return {\n    type: FETCH_ADAPTIVE_CARD_SUCCESS,\n    response: result,\n  };\n}\n\nexport function getAdaptiveCardError(error: string): IAction {\n  return {\n    type: FETCH_ADAPTIVE_CARD_ERROR,\n    response: error\n  };\n}\n\nexport function getAdaptiveCardPending(): IAction {\n  return {\n    type: FETCH_ADAPTIVE_CARD_PENDING,\n    response: ''\n  };\n}\n\nexport function getAdaptiveCard(payload: string, sampleQuery: IQuery): Function {\n  return async (dispatch: Function) => {\n\n    if (!payload) {\n      // no payload so return empty result\n      return dispatch(getAdaptiveCardSuccess());\n    }\n\n    const templateFileName = lookupTemplate(sampleQuery);\n    if (!templateFileName) {\n      // we dont support this card yet\n      return dispatch(getAdaptiveCardError('No template available'));\n    }\n\n    dispatch(getAdaptiveCardPending());\n\n    return fetch(`https://templates.adaptivecards.io/graph.microsoft.com/${templateFileName}`)\n      .then(resp => resp.json())\n      .then((fetchResult) => {\n        if (fetchResult.error) {\n          throw (fetchResult.error);\n        }\n        // create a card from the template\n        const template = new AdaptiveCardsTemplateAPI.Template(fetchResult);\n        const context = new AdaptiveCardsTemplateAPI.EvaluationContext();\n        context.$root = payload;\n        const card = template.expand(context);\n        // give back the result of the card\n        return dispatch(getAdaptiveCardSuccess(card));\n      })\n      .catch(error => {\n        // something wrong happened\n        return dispatch(getAdaptiveCardError(error));\n      });\n  };\n}\n\nfunction lookupTemplate(sampleQuery: IQuery): string {\n  if (sampleQuery) {\n    const urlObject: URL = new URL(sampleQuery.sampleUrl);\n    // remove the prefix i.e. beta or v1.0 and any possible extra whack character at the end'/'\n    const query = urlObject.pathname.substr(6).replace(/\\/$/, '') + urlObject.search;\n    return templateMap[query];\n  }\n  return '';\n}\n\nconst templateMap: any = {\n  'me': 'Profile.json',\n  'me/manager': 'Profile.json',\n  'me/drive/root/children': 'Files.json'\n};","import * as AdaptiveCardsAPI from 'adaptivecards';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { IAdaptiveCardProps } from '../../../../types/adaptivecard';\nimport { getAdaptiveCard } from '../../../services/actions/adaptive-cards-action-creator';\nimport { Monaco } from '../../common';\n\nclass AdaptiveCard extends Component<IAdaptiveCardProps> {\n  private adaptiveCard: AdaptiveCardsAPI.AdaptiveCard;\n  constructor(props: IAdaptiveCardProps) {\n    super(props);\n    this.adaptiveCard = new AdaptiveCardsAPI.AdaptiveCard();\n  }\n\n  public componentDidMount() {\n    const { body , sampleQuery, hostConfig } = this.props;\n    this.props.actions!.getAdaptiveCard(body, sampleQuery);\n    if (hostConfig) {\n      this.adaptiveCard.hostConfig = new AdaptiveCardsAPI.HostConfig(hostConfig);\n    }\n  }\n\n  public componentDidUpdate(nextProps: IAdaptiveCardProps) {\n    const { body , sampleQuery } = this.props;\n    if (JSON.stringify(nextProps.body) !== JSON.stringify(body)) {\n      // we need to update the card as our body has changed\n      this.props.actions!.getAdaptiveCard(body, sampleQuery);\n    }\n  }\n\n  public componentWillUnmount() {\n    // Remove all references\n    delete this.adaptiveCard;\n  }\n\n  public shouldComponentUpdate(nextProps: IAdaptiveCardProps) {\n    if (JSON.stringify(this.props.body) !== JSON.stringify(nextProps.body)) {\n      return true; // body has changed so card will too\n    }\n    if (JSON.stringify(nextProps.card.data) === JSON.stringify(this.props.card.data)) {\n      return false; // card still the same no need to re-render\n    }\n    return true;\n  }\n\n  public render() {\n    const { data , pending } = this.props.card;\n\n    if (pending) {\n      return (<Monaco\n        body={'Fetching Adaptive Card ...'}\n      />);\n    }\n\n    if (data) {\n      try {\n        this.adaptiveCard.parse(data);\n        const renderedCard = this.adaptiveCard.render();\n        return <div style={{minHeight: '500px', maxHeight: '800px', overflowY : 'auto' }} ref={(n) => {\n          if (n && n.firstChild === null) {\n            n.appendChild(renderedCard);\n          } else {\n            if (n && n.firstChild !== null) {\n              n.replaceChild(renderedCard, n.firstChild);\n            }\n          }\n        }}/>;\n      } catch (err) {\n        return <div style={{ color: 'red' }}>{err.message}</div>;\n      }\n    } else {\n        return (<Monaco\n          body={data === null ? 'The Adaptive Card for this response is not available' : ''}\n        />);\n    }\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    card: state.adaptiveCard,\n    sampleQuery: state.sampleQuery\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators({\n      getAdaptiveCard\n    }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdaptiveCard);","export const darkThemeHostConfig: any = {\n  'containerStyles': {\n    'default': {\n      'foregroundColors': {\n        'default': {\n          'default': '#FFFFFF',\n          'subtle': '#88FFFFFF',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'dark': {\n          'default': '#000000',\n          'subtle': '#66000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'light': {\n          'default': '#FFFFFF',\n          'subtle': '#33000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'accent': {\n          'default': '#2E89FC',\n          'subtle': '#882E89FC',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'good': {\n          'default': '#00FF00',\n          'subtle': '#DD00FF00',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'warning': {\n          'default': '#FFD800',\n          'subtle': '#DDFFD800',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'attention': {\n          'default': '#FF0000',\n          'subtle': '#DDFF0000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        }\n      },\n      'backgroundColor': '#1F1F1F'\n    },\n    'emphasis': {\n      'foregroundColors': {\n        'default': {\n          'default': '#FFFFFF',\n          'subtle': '#88FFFFFF',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'dark': {\n          'default': '#000000',\n          'subtle': '#66000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'light': {\n          'default': '#FFFFFF',\n          'subtle': '#33000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'accent': {\n          'default': '#2E89FC',\n          'subtle': '#882E89FC',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'good': {\n          'default': '#00FF00',\n          'subtle': '#DD00FF00',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'warning': {\n          'default': '#FF0000',\n          'subtle': '#DDFF0000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'attention': {\n          'default': '#FFD800',\n          'subtle': '#DDFFD800',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        }\n      },\n      'backgroundColor': '#19FFFFFF'\n    }\n  }\n};\n\nexport const lightThemeHostConfig: any = {\n  'containerStyles': {\n    'default': {\n      'foregroundColors': {\n        'default': {\n          'default': '#000000',\n          'subtle': '#767676',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'dark': {\n          'default': '#000000',\n          'subtle': '#66000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'light': {\n          'default': '#FFFFFF',\n          'subtle': '#33000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'accent': {\n          'default': '#0063B1',\n          'subtle': '#0063B1',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'good': {\n          'default': '#54a254',\n          'subtle': '#DD54a254',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'warning': {\n          'default': '#c3ab23',\n          'subtle': '#DDc3ab23',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'attention': {\n          'default': '#FF0000',\n          'subtle': '#DDFF0000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        }\n      },\n      'backgroundColor': '#FFFFFF'\n    },\n    'emphasis': {\n      'foregroundColors': {\n        'default': {\n          'default': '#000000',\n          'subtle': '#767676',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'dark': {\n          'default': '#000000',\n          'subtle': '#66000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'light': {\n          'default': '#FFFFFF',\n          'subtle': '#33000000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'accent': {\n          'default': '#2E89FC',\n          'subtle': '#882E89FC',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'good': {\n          'default': '#54a254',\n          'subtle': '#DD54a254',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'warning': {\n          'default': '#c3ab23',\n          'subtle': '#DDc3ab23',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        },\n        'attention': {\n          'default': '#FF0000',\n          'subtle': '#DDFF0000',\n          'highlightColors': {\n            'default': '#22000000',\n            'subtle': '#11000000'\n          }\n        }\n      },\n      'backgroundColor': '#F0F0F0'\n    }\n  }\n};","import { IAction } from '../../../types/action';\nimport { IQuery } from '../../../types/query-runner';\nimport { GET_SNIPPET_SUCCESS } from '../redux-constants';\n\nexport function getSnippetSuccess(response: string): IAction {\n  return {\n    type: GET_SNIPPET_SUCCESS,\n    response,\n  };\n}\n\nexport function getSnippet(language: string, sampleQuery: IQuery, dispatch: Function) {\n  const sample = { ...sampleQuery };\n\n  if (sample.sampleUrl) {\n    const urlObject: URL = new URL(sample.sampleUrl);\n    sample.sampleUrl = urlObject.pathname + urlObject.search;\n  }\n\n  let url = 'https://graphexplorerapi.azurewebsites.net/api/graphexplorersnippets';\n\n  if (language !== 'csharp') {\n    url += `?lang=${language}`;\n  }\n\n  // tslint:disable-next-line: max-line-length\n  const body = `${sample.selectedVerb} ${sample.sampleUrl} HTTP/1.1\\r\\nHost: graph.microsoft.com\\r\\nContent-Type: application/json\\r\\n\\r\\n${JSON.stringify(sample.sampleBody)}`;\n  const obj: any = {};\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/http'\n    },\n    body\n  }).then(resp => resp.text())\n    // tslint:disable-next-line\n    .then((result) => {\n      obj[language] = result;\n      dispatch(getSnippetSuccess(obj));\n    });\n}\n","import { PivotItem } from 'office-ui-fabric-react';\nimport React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\n\nimport { getSnippet } from '../../../services/actions/snippet-action-creator';\nimport { Monaco } from '../../common';\n\ninterface ISnippetProps {\n  language: string;\n}\n\nexport function renderSnippets(supportedLanguages: string[]) {\n  return supportedLanguages.map((language: string) => (\n    <PivotItem\n      key={language}\n      headerText={language}\n    >\n      <Snippet language={language} />\n    </PivotItem>\n  ));\n}\n\nfunction Snippet(props: ISnippetProps) {\n  let { language } = props;\n  /**\n   * Converting language lowercase so that we won't have to call toLowerCase() in multiple places.\n   *\n   * Ie the monaco component expects a lowercase string for the language prop and the graphexplorerapi expects\n   * a lowercase string for the param value.\n   */\n  language = language.toLowerCase();\n\n\n  const sampleQuery = useSelector((state: any) => state.sampleQuery, shallowEqual);\n  const snippet = useSelector((state: any) => (state.snippets)[language]);\n  const [ loadingState, setLoadingState ] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      setLoadingState(true);\n\n      getSnippet(language, sampleQuery, dispatch)\n        .then(() => setLoadingState(false));\n  }, [sampleQuery.sampleUrl]);\n\n  return (\n    <Monaco\n      body={loadingState ? 'Fetching code snippet...' : snippet}\n      language={language}\n    />\n  );\n}\n","import { Pivot } from 'office-ui-fabric-react';\nimport React from 'react';\nimport { renderSnippets } from './snippets-helper';\n\nexport function Snippets() {\n  const supportedLanguages = ['CSharp', 'Javascript', 'Java', 'Objective-C'];\n\n  return (\n    <Pivot>\n      {renderSnippets(supportedLanguages)}\n    </Pivot>\n  );\n}\n","import { Pivot, PivotItem } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ThemeContext } from '../../../themes/theme-context';\nimport { Mode } from '../../../types/action';\n\nimport { IQueryResponseProps } from '../../../types/query-response';\nimport { Image, Monaco } from '../common';\nimport AdaptiveCard  from './adaptive-cards/AdaptiveCard';\nimport { darkThemeHostConfig, lightThemeHostConfig } from './adaptive-cards/AdaptiveHostConfig';\nimport './query-response.scss';\nimport { Snippets } from './snippets';\n\nclass QueryResponse extends Component<IQueryResponseProps, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    let body: any;\n    let headers;\n    let isImageResponse;\n    const {\n      intl: { messages },\n      verb\n    }: any = this.props;\n\n    const { graphResponse, mode } = this.props;\n    if (graphResponse) {\n      body = graphResponse.body;\n      headers = graphResponse.headers;\n\n      if (body) {\n        /**\n         * body.body is a getter propety for the Body mixin. It is used to access the ReadableStream property.\n         * https://developer.mozilla.org/en-US/docs/Web/API/Body/body\n         */\n        isImageResponse = body && body.body;\n      }\n    }\n\n\n    const pivotItems = [\n      <PivotItem\n        key='response-preview'\n        ariaLabel='Response Preview'\n        headerText={messages['Response Preview']}\n      >\n        {isImageResponse ? (\n          <Image\n            styles={{ padding: '10px' }}\n            body={body}\n            alt='profile image'\n          />\n        ) : (\n          <Monaco body={body} verb={verb} />\n        )}\n      </PivotItem>,\n      <PivotItem\n        key='response-headers'\n        ariaLabel='Response Headers'\n        headerText={messages['Response Headers']}\n      >\n        <Monaco body={headers} />\n      </PivotItem>\n    ];\n\n    if (mode === Mode.Complete) {\n      pivotItems.push(\n        <PivotItem\n          key = 'adaptive-cards'\n          ariaLabel='Adaptive Cards'\n          headerText={messages['Adaptive Cards']}\n        >\n          <ThemeContext.Consumer >\n            {(theme) => (\n              <AdaptiveCard\n                body= {body}\n                hostConfig={theme === 'light' ? lightThemeHostConfig : darkThemeHostConfig}\n              />\n            )}\n          </ThemeContext.Consumer>\n        </PivotItem>\n      );\n      pivotItems.push(\n        <PivotItem\n          key='code-snippets'\n          ariaLabel='Code Snippets'\n          headerText={messages.Snippets}\n        >\n          <Snippets/>\n        </PivotItem>\n      );\n    }\n\n    return (\n      <div className='query-response'>\n        <Pivot className='pivot-response'>\n          {pivotItems}\n        </Pivot>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    graphResponse:  state.graphResponse,\n    appTheme: state.theme,\n    mode : state.graphExplorerMode,\n  };\n}\n\n// @ts-ignore\nconst WithIntl = injectIntl(QueryResponse);\nexport default connect(mapStateToProps)(WithIntl);\n\n","import { PrimaryButton, Spinner, SpinnerSize } from 'office-ui-fabric-react';\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { ISubmitButtonControl } from '../../../../types/submit-button';\n\nconst SubmitButtonControl = ({\n  handleOnClick,\n  submitting,\n  className,\n  text,\n  ariaLabel,\n  role\n}: ISubmitButtonControl) => {\n\n  return (\n    <div className={className}>\n      <PrimaryButton disabled={submitting}\n        onClick={() => handleOnClick()}\n        ariaLabel={ariaLabel}\n        role={role}\n      >\n        <FormattedMessage\n          id={text}\n        />\n        {submitting && <>&nbsp;\n            <Spinner size={SpinnerSize.small} />\n        </>}\n      </PrimaryButton>\n    </div>\n  );\n};\n\nexport default SubmitButtonControl;\n","import { Dropdown, TextField } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Mode } from '../../../types/action';\nimport { IQueryInputProps } from '../../../types/query-runner';\nimport SubmitButton from '../common/submit-button/SubmitButton';\n\nexport class QueryInput extends Component<IQueryInputProps, any> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  public render() {\n    const {\n      handleOnRunQuery,\n      handleOnMethodChange,\n      handleOnUrlChange,\n      handleOnBlur,\n      httpMethods,\n      selectedVerb,\n      sampleUrl,\n      submitting,\n      mode,\n    } = this.props;\n\n    return (\n      <div className='row'>\n        <div className='col-sm-3'>\n          <Dropdown\n            ariaLabel='Query sample option'\n            role='listbox'\n            selectedKey={selectedVerb}\n            options={httpMethods}\n            disabled={mode === Mode.TryIt}\n            onChange={(event, method) => handleOnMethodChange(method)}\n          />\n        </div>\n        <div className='col-sm-7'>\n          <TextField\n            ariaLabel='Query Sample Input'\n            role='textbox'\n            placeholder='Query Sample'\n            onChange={(event, value) => handleOnUrlChange(value)}\n            defaultValue={sampleUrl}\n            onBlur={() => handleOnBlur()}\n          />\n        </div>\n        <div className='col-sm-2 run-query-button'>\n          <SubmitButton\n            className='run-query-button'\n            text='Run Query'\n            role='button'\n            handleOnClick={() => handleOnRunQuery()}\n            submitting={submitting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    sampleUrl: state.sampleQuery.sampleUrl,\n    selectedVerb: state.sampleQuery.selectedVerb,\n    appTheme: state.theme,\n    mode: state.graphExplorerMode,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(QueryInput);\n","import { DetailsList, IColumn, IconButton, SelectionMode } from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport { IHeadersListControl } from '../../../../types/request';\n\nconst HeadersList = ({\n  handleOnHeaderDelete,\n  headers\n}: IHeadersListControl) => {\n\nconst renderItemColumn = (item: any, index: number | undefined, column: IColumn | undefined) => {\n  if (column) {\n    const fieldContent = item[column.fieldName as keyof any] as string;\n    switch (column.key) {\n      case 'button':\n        return <IconButton\n          iconProps={{ iconName: 'Delete' }}\n          title='Remove request header'\n          ariaLabel='Remove request header'\n          onClick={(event) => handleOnHeaderDelete(event, item)}\n        />;\n\n      default:\n        return <span className='field-content'>{fieldContent}</span>;\n    }\n  }\n};\n\nconst columns = [\n  { key: 'key', name: 'Key', fieldName: 'name', minWidth: 300, maxWidth: 400 },\n  { key: 'value', name: 'Value', fieldName: 'value', minWidth: 300, maxWidth: 400 },\n  { key: 'button', name: '', fieldName: 'button', minWidth: 200, maxWidth: 300 }\n];\n\nconst headerItems = (headers) ? headers.filter((header) => {\n  return header.value !== '';\n}) : [];\n\nreturn (\n  <div className='headers-list'>\n    <DetailsList\n      className='detail-list'\n      items={headerItems}\n      setKey='set'\n      columns={columns}\n      onRenderItemColumn={renderItemColumn}\n      selectionMode={SelectionMode.none}\n    />\n    </div>\n  );\n};\n\nexport default HeadersList;\n","import { PrimaryButton, TextField } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { IRequestHeadersProps } from '../../../../types/request';\nimport * as headersActionCreators from '../../../services/actions/request-headers-action-creators';\nimport HeadersList from './HeadersList';\n\nclass RequestHeaders extends Component<IRequestHeadersProps, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      headerName: '',\n      headerValue: '',\n    };\n  }\n\n  private handleOnHeaderNameChange = (name?: string) => {\n    if (name) {\n      this.setState({\n        headerName: name,\n      });\n    }\n  };\n\n  private handleOnHeaderValueChange = (value?: string) => {\n    if (value) {\n      this.setState({ headerValue: value });\n    }\n  };\n\n  private handleOnHeaderDelete = (header: any) => {\n    const { actions } = this.props;\n    if (actions) {\n      actions.removeRequestHeader(header);\n    }\n  };\n\n  private handleOnHeaderAdd = () => {\n    if (this.state.headerName !== '') {\n      const { headerName, headerValue } = this.state;\n      const { actions } = this.props;\n      let { headers } = this.props;\n      const header = { name: headerName, value: headerValue };\n\n      if (!headers) {\n        headers = [{\n          name: '',\n          value: ''\n        }];\n      }\n\n      const newHeaders = [header, ...headers];\n\n      this.setState({\n        headerName: '',\n        headerValue: '',\n      });\n      if (actions) {\n        actions.addRequestHeader(newHeaders);\n      }\n    }\n  };\n\n\n  public render() {\n    // @ts-ignore\n    const { headers, intl: { messages } } = this.props;\n\n    return (\n      <div className='request-editor-control'>\n        <div className='row headers-editor'>\n          <div className='col-sm-5'>\n            <TextField className='header-input'\n              placeholder={messages.Key}\n              value={this.state.headerName}\n              onChange={(event, name) => this.handleOnHeaderNameChange(name)}\n            />\n          </div>\n          <div className='col-sm-5'>\n            <TextField\n              className='header-input'\n              placeholder={messages.Value}\n              value={this.state.headerValue}\n              onChange={(event, value) => this.handleOnHeaderValueChange(value)}\n            />\n          </div>\n          <div className='col-sm-2'>\n            <PrimaryButton\n              className='header-input-button'\n              onClick={() => this.handleOnHeaderAdd()}>\n              <FormattedMessage id='Add' />\n            </PrimaryButton>\n          </div>\n        </div>\n        <br />\n        <hr />\n        <HeadersList handleOnHeaderDelete={(event: any, header: any) => this.handleOnHeaderDelete(header)}\n          headers={headers}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators(headersActionCreators, dispatch),\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    headers: state.headersAdded\n  };\n}\n\n// @ts-ignore\nconst WithIntl = injectIntl(RequestHeaders);\nexport default connect(mapStateToProps, mapDispatchToProps)(WithIntl);\n","import { Pivot, PivotItem } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { IRequestComponent } from '../../../../types/request';\nimport { Monaco } from '../../common/monaco/Monaco';\nimport './request.scss';\nimport RequestHeaders from './RequestHeaders';\n\nexport class Request extends Component<IRequestComponent, any> {\n  constructor(props: IRequestComponent) {\n    super(props);\n  }\n\n  public render() {\n\n    const {\n      handleOnEditorChange,\n      sampleBody\n    } = this.props;\n\n    return (\n      <div className='request-editors'>\n        <Pivot>\n          <PivotItem headerText='Request Body'>\n            <Monaco\n              body={sampleBody}\n              onChange={(value) => handleOnEditorChange(value)} />\n          </PivotItem>\n          <PivotItem headerText='Request Headers'>\n            <RequestHeaders />\n          </PivotItem>\n        </Pivot>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    sampleBody: state.sampleQuery.sampleBody\n  };\n}\n\nexport default connect(mapStateToProps, null)(Request);","import { IDropdownOption, styled } from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport {\n  IQueryRunnerProps,\n  IQueryRunnerState,\n} from '../../../types/query-runner';\nimport * as queryActionCreators from '../../services/actions/query-action-creators';\nimport * as queryInputActionCreators from '../../services/actions/query-input-action-creators';\nimport { addRequestHeader } from '../../services/actions/request-headers-action-creators';\nimport './query-runner.scss';\nimport QueryInput from './QueryInput';\nimport Request from './request/Request';\n\nexport class QueryRunner extends Component<\n  IQueryRunnerProps,\n  IQueryRunnerState\n  > {\n  constructor(props: IQueryRunnerProps) {\n    super(props);\n    this.state = {\n      httpMethods: [\n        { key: 'GET', text: 'GET' },\n        { key: 'POST', text: 'POST' },\n        { key: 'PUT', text: 'PUT' },\n        { key: 'PATCH', text: 'PATCH' },\n        { key: 'DELETE', text: 'DELETE' }\n      ],\n      url: ''\n    };\n  }\n\n  private handleOnMethodChange = (option?: IDropdownOption) => {\n    const query = { ...this.props.sampleQuery };\n    const { actions } = this.props;\n    if (option !== undefined) {\n      query.selectedVerb = option.text;\n      if (actions) {\n        actions.setSampleQuery(query);\n      }\n\n      // Sets selected verb in App Component\n      this.props.onSelectVerb(option.text);\n    }\n  };\n\n  private handleOnUrlChange = (newQuery = '') => {\n    this.setState({ url: newQuery });\n  };\n\n  private handleOnBlur = () => {\n    const { url } = this.state;\n    const query = { ...this.props.sampleQuery };\n    const { actions } = this.props;\n\n    if (url) {\n      query.sampleUrl = url;\n      if (actions) {\n        actions.setSampleQuery(query);\n      }\n    }\n  }\n\n  private handleOnEditorChange = (body?: string) => {\n    this.setState({ sampleBody: body });\n  };\n\n  private handleOnRunQuery = () => {\n    const { sampleBody } = this.state;\n    const { actions, headers, sampleQuery } = this.props;\n\n    if (headers) {\n      sampleQuery.sampleHeaders = headers;\n    }\n\n    if (sampleBody) {\n      sampleQuery.sampleBody = JSON.parse(sampleBody);\n    }\n\n    if (actions) {\n      actions.runQuery(sampleQuery);\n    } \n  };\n\n  public render() {\n    const { httpMethods } = this.state;\n    const { isLoadingData, sampleQuery } = this.props;\n\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-sm-12 col-lg-12'>\n            <QueryInput\n              handleOnRunQuery={this.handleOnRunQuery}\n              handleOnMethodChange={this.handleOnMethodChange}\n              handleOnUrlChange={this.handleOnUrlChange}\n              handleOnBlur={this.handleOnBlur}\n              httpMethods={httpMethods}\n              submitting={isLoadingData}\n            />\n          </div>\n        </div>\n        {sampleQuery.selectedVerb !== 'GET' && (\n          <div className='row'>\n            <div className='col-sm-12 col-lg-12'>\n              <Request handleOnEditorChange={this.handleOnEditorChange} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators(\n      { ...queryActionCreators, ...queryInputActionCreators, addRequestHeader },\n      dispatch\n    )\n  };\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    isLoadingData: state.isLoadingData,\n    headers: state.headersAdded,\n    sampleQuery: state.sampleQuery,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryRunner);\n","import {\n  FontSizes, FontWeights,\n  ITheme,\n} from '@uifabric/styling';\n\nexport const sidebarStyles = (theme: ITheme) => {\n  const pageHeight = '850px';\n  return {\n    searchBox: {\n      marginTop: theme.spacing.s1,\n    },\n    spinner: {\n      display: 'flex',\n      width: '100%',\n      minHeight: pageHeight,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    queryList: {\n      marginBottom: theme.spacing.s1,\n      cursor: 'pointer',\n      maxHeight: pageHeight,\n      minHeight: pageHeight,\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      fontSize: FontSizes.medium,\n      background: 'inherit'\n    },\n    pullLeft: {\n      float: 'left'\n    },\n\n    /* Group Headers */\n\n    groupHeader: {\n      fontSize: FontSizes.medium,\n      position: 'relative',\n    },\n    groupHeaderRow: {\n      lineHeight: '50px',\n      fontSize: FontSizes.medium,\n      textAlign: 'left',\n      paddingTop: '0px',\n      paddingRight: '4px',\n      paddingBottom: '0px',\n      paddingLeft: '4px',\n    },\n    groupHeaderRowIcon: {\n      marginTop: '2%',\n      fontSize: FontSizes.small,\n      fontWeight: FontWeights.light\n    },\n    groupTitle: {\n      fontSize: FontSizes.medium,\n      fontWeight: FontWeights.semibold,\n      cursor: 'pointer',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      outline: '0px',\n    },\n    headerCount: {\n      paddingTop: '0px',\n      paddingRight: '4px',\n      paddingBottom: '0px',\n      paddingLeft: '4px',\n    },\n\n    /* Row */\n\n    queryRow: {\n      background: 'inherit',\n      lineHeight: '100%',\n      width: '80%',\n      fontSize: FontSizes.medium,\n    },\n    queryContent: {\n      display: 'table-cell',\n      float: 'left',\n      textAlign: 'left',\n    },\n    rowDisabled: {\n      cursor: 'not-allowed',\n    },\n    badge: {\n      fontWeight: FontWeights.bold,\n      fontSize: FontSizes.small,\n    },\n    docLink: {\n      display: 'table-cell',\n      float: 'right',\n      verticalAlign: 'center',\n      marginTop: '-7.5%',\n    },\n\n  };\n};\n","import {\n  ContextualMenuItemType, DetailsList, DetailsRow, getId, getTheme,\n  IColumn, IconButton, SearchBox, SelectionMode, styled, TooltipHost\n} from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { IHistoryItem, IHistoryProps } from '../../../../types/history';\nimport { IQuery } from '../../../../types/query-runner';\nimport * as queryActionCreators from '../../../services/actions/query-action-creators';\nimport * as queryInputActionCreators from '../../../services/actions/query-input-action-creators';\nimport * as requestHistoryActionCreators from '../../../services/actions/request-history-action-creators';\nimport { GRAPH_URL } from '../../../services/graph-constants';\nimport { classNames } from '../../classnames';\nimport { sidebarStyles } from '../Sidebar.styles';\nimport { dynamicSort } from './historyUtil';\n\nexport class History extends Component<IHistoryProps, any> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      groupedList: {\n        items: [],\n        categories: [],\n      }\n    };\n  }\n\n\n  public componentDidMount = () => {\n    this.generateGroupedList(this.props.history);\n  }\n\n  public componentDidUpdate = (prevProps: IHistoryProps) => {\n    if (prevProps.history !== this.props.history) {\n      this.generateGroupedList(this.props.history);\n    }\n  }\n\n  public searchValueChanged = (value: any): void => {\n    const { history } = this.props;\n    const keyword = value.toLowerCase();\n\n    const filteredSamples = history.filter((sample: any) => {\n      const name = sample.url.toLowerCase();\n      return name.toLowerCase().includes(keyword);\n    });\n\n    this.generateGroupedList(filteredSamples);\n  }\n\n  public formatDate = (date: any) => {\n    const year = date.getFullYear();\n    let month = (date.getMonth() + 1);\n    month = (month < 10 ? '0' : '') + month;\n    let day = date.getDate();\n    day = (day < 10 ? '0' : '') + day;\n    return `${year}-${month}-${day}`;\n  }\n\n  public getItems(history: any) {\n    const items: any[] = [];\n    let date = 'Older';\n    const today = this.formatDate(new Date());\n    const yesterdaysDate = new Date(); yesterdaysDate.setDate(yesterdaysDate.getDate() - 1);\n    const yesterday = this.formatDate(yesterdaysDate);\n\n    history.forEach((element: any) => {\n      if (element.createdAt.includes(today)) {\n        date = 'Today';\n      } else if (element.createdAt.includes(yesterday)) {\n        date = 'Yesterday';\n      }\n      element.category = date;\n      items.push(element);\n    });\n    return items.sort(dynamicSort('-createdAt'));\n  }\n\n  public generateGroupedList(history: any) {\n    const map = new Map();\n    const categories: any[] = [];\n    const items = this.getItems(history);\n\n    const isCollapsed = false;\n    let previousCount = 0;\n    let count = 0;\n\n    for (const historyItem of items) {\n      if (!map.has(historyItem.category)) {\n        map.set(historyItem.category, true);\n        count = items.filter((sample: IHistoryItem) => sample.category === historyItem.category).length;\n        categories.push({\n          name: historyItem.category,\n          key: historyItem.category,\n          startIndex: previousCount,\n          isCollapsed,\n          count,\n        });\n        previousCount += count;\n      }\n    }\n\n    this.setState({\n      groupedList: {\n        items,\n        categories,\n      }\n    });\n  }\n\n  public renderRow = (props: any): any => {\n    const classes = classNames(this.props);\n    return (\n      <div className={classes.groupHeader}>\n        <DetailsRow {...props} className={classes.queryRow} />\n      </div>\n    );\n  };\n\n  public renderItemColumn = (item: any, index: number | undefined, column: IColumn | undefined) => {\n    const classes = classNames(this.props);\n    const hostId: string = getId('tooltipHost');\n    const currentTheme = getTheme();\n\n    if (column) {\n      const queryContent = item[column.fieldName as keyof any] as string;\n      let color = currentTheme.palette.green;\n      if (item.status > 300) {\n        color = currentTheme.palette.red;\n      }\n\n      switch (column.key) {\n\n        case 'status':\n          return <span style={{ color }} className={classes.badge}>{item.status}</span>;\n\n        case 'button':\n          return <IconButton\n            className={classes.docLink}\n            title='Actions'\n            ariaLabel='Actions'\n            menuProps={{\n              shouldFocusOnMount: true,\n              items: [\n                {\n                  key: 'actions',\n                  itemType: ContextualMenuItemType.Header,\n                  text: 'Actions',\n                },\n                {\n                  key: 'view',\n                  text: 'View',\n                  iconProps: {\n                    iconName: 'View'\n                  },\n                  onClick: () => this.onViewQuery(item)\n                },\n                {\n                  key: 'runQuery',\n                  text: 'Run',\n                  iconProps: {\n                    iconName: 'Refresh'\n                  },\n                  onClick: () => this.onRunQuery(item)\n                },\n                {\n                  key: 'remove',\n                  text: 'Remove',\n                  iconProps: {\n                    iconName: 'Delete'\n                  },\n                  onClick: () => this.onDeleteQuery(item)\n                },\n              ]\n            }}\n          />;\n\n        default:\n          return <>\n            <TooltipHost\n              content={`${item.method} - ${queryContent}`}\n              id={hostId}\n              calloutProps={{ gapSpace: 0 }}\n              styles={{ root: { display: 'inline-block' } }}\n            >\n              <span aria-labelledby={hostId} className={classes.queryContent}>\n                {queryContent.replace(GRAPH_URL, '')}\n              </span>\n            </TooltipHost>\n          </>;\n      }\n    }\n  };\n\n  public renderGroupHeader = (props: any): any => {\n    const classes = classNames(this.props);\n\n    return (\n      <div aria-label={props.group!.name} onClick={this.onToggleCollapse(props)}>\n        <div className={classes.groupHeaderRow}>\n          <IconButton\n            className={`${classes.pullLeft} ${classes.groupHeaderRowIcon}`}\n            iconProps={{ iconName: props.group!.isCollapsed ? 'ChevronRightSmall' : 'ChevronDownSmall' }}\n            title={props.group!.isCollapsed ?\n              `Expand ${props.group!.name}` : `Collapse ${props.group!.name}`}\n            ariaLabel='expand collapse group'\n            onClick={() => this.onToggleCollapse(props)}\n          />\n          <div className={classes.groupTitle}>\n            <span>{props.group!.name}</span>\n            <span className={classes.headerCount}>({props.group!.count})</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private onToggleCollapse(props: any): () => void {\n    return () => {\n      props!.onToggleCollapse!(props!.group!);\n    };\n  }\n\n  private renderDetailsHeader() {\n    return (\n      <div />\n    );\n  }\n\n  private onRunQuery = (query: IHistoryItem) => {\n    const { actions } = this.props;\n\n    const sampleQuery: IQuery = {\n      sampleUrl: GRAPH_URL + query.url.replace(GRAPH_URL, ''),\n      selectedVerb: query.method,\n      sampleBody: query.body,\n      sampleHeaders: query.headers\n    };\n\n    if (actions) {\n      if (sampleQuery.selectedVerb === 'GET') {\n        sampleQuery.sampleBody = JSON.parse('{}');\n      }\n      actions.runQuery(sampleQuery);\n      actions.setSampleQuery(sampleQuery);\n    }\n  }\n\n\n  private onDeleteQuery = (query: IHistoryItem) => {\n    const { actions } = this.props;\n    if (actions) {\n      actions.removeHistoryItem(query);\n    }\n  }\n\n  private onViewQuery = (query: IHistoryItem) => {\n    const { actions } = this.props;\n\n    const sampleQuery: IQuery = {\n      sampleUrl: GRAPH_URL + query.url.replace(GRAPH_URL, ''),\n      selectedVerb: query.method,\n      sampleBody: query.body,\n      sampleHeaders: query.headers\n    };\n\n    if (actions) {\n      actions.setSampleQuery(sampleQuery);\n      actions.viewHistoryItem({\n        body: query.result,\n        headers: query.responseHeaders\n      });\n    }\n  }\n\n  public render() {\n    const { groupedList } = this.state;\n    const classes = classNames(this.props);\n    const columns = [\n      { key: 'status', name: '', fieldName: 'status', minWidth: 20, maxWidth: 50 },\n      { key: 'url', name: '', fieldName: 'url', minWidth: 100, maxWidth: 200 },\n      { key: 'button', name: '', fieldName: '', minWidth: 20, maxWidth: 20, },\n    ];\n\n    return (\n      <div>\n        <SearchBox placeholder='Search' className={classes.searchBox}\n          onChange={(value) => this.searchValueChanged(value)}\n        />\n        <hr />\n        {groupedList.items && <DetailsList\n          className={classes.queryList}\n          onRenderItemColumn={this.renderItemColumn}\n          items={groupedList.items}\n          columns={columns}\n          selectionMode={SelectionMode.none}\n          groups={groupedList.categories}\n          groupProps={{\n            showEmptyGroups: true,\n            onRenderHeader: this.renderGroupHeader,\n          }}\n          onRenderRow={this.renderRow}\n          onRenderDetailsHeader={this.renderDetailsHeader}\n        />}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {\n    history: state.history\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators({\n      ...queryActionCreators,\n      ...queryInputActionCreators,\n      ...requestHistoryActionCreators\n    },\n      dispatch),\n  };\n}\n\n// @ts-ignore\nconst styledHistory = styled(History, sidebarStyles);\nexport default connect(mapStateToProps, mapDispatchToProps)(styledHistory);\n","import { IAction } from '../../../types/action';\nimport { IRequestOptions } from '../../../types/request';\nimport { SAMPLES_FETCH_ERROR, SAMPLES_FETCH_PENDING, SAMPLES_FETCH_SUCCESS } from '../redux-constants';\n\nexport function fetchSamplesSuccess(response: object): IAction {\n  return {\n    type: SAMPLES_FETCH_SUCCESS,\n    response,\n  };\n}\n\nexport function fetchSamplesError(response: object): IAction {\n  return {\n    type: SAMPLES_FETCH_ERROR,\n    response,\n  };\n}\n\nexport function fetchSamplesPending(): any {\n  return {\n    type: SAMPLES_FETCH_PENDING\n  };\n}\n\nexport function fetchSamples(): Function {\n  return async (dispatch: Function) => {\n    const samplesUrl = 'https://graphexplorerapi.azurewebsites.net/api/GraphExplorerSamples';\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    const options: IRequestOptions = { headers };\n\n    dispatch(fetchSamplesPending());\n\n    return fetch(samplesUrl, options)\n      .then(res => res.json())\n      .then(res => {\n        if (res.error) {\n          throw (res.error);\n        }\n        dispatch(fetchSamplesSuccess(res.sampleQueries));\n        return res.products;\n      })\n      .catch(error => {\n        dispatch(fetchSamplesError(error));\n      });\n\n  };\n}\n","import {\n  DetailsList, DetailsListLayoutMode, DetailsRow, getId, getTheme,\n  IColumn, IconButton, MessageBar, MessageBarType, SearchBox,\n  Selection, SelectionMode, Spinner, SpinnerSize, styled, TooltipHost\n} from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { IQuery, ISampleQueriesProps, ISampleQuery } from '../../../../types/query-runner';\nimport * as queryActionCreators from '../../../services/actions/query-action-creators';\nimport * as queryInputActionCreators from '../../../services/actions/query-input-action-creators';\nimport * as samplesActionCreators from '../../../services/actions/samples-action-creators';\nimport { GRAPH_URL } from '../../../services/graph-constants';\nimport { classNames } from '../../classnames';\nimport { sidebarStyles } from '../Sidebar.styles';\n\nexport class SampleQueries extends Component<ISampleQueriesProps, any> {\n\n  constructor(props: ISampleQueriesProps) {\n    super(props);\n    this.state = {\n      groupedList: {\n        samples: [],\n        categories: [],\n      }\n    };\n  }\n\n  public componentDidMount = () => {\n    const { queries } = this.props.samples;\n    if (queries && queries.length > 0) {\n      this.generateSamples(queries);\n    } else {\n      this.props.actions!.fetchSamples();\n    }\n  }\n\n  public componentDidUpdate = (prevProps: ISampleQueriesProps) => {\n    if (prevProps.samples.queries !== this.props.samples.queries) {\n      this.generateSamples(this.props.samples.queries);\n    }\n  }\n\n  public searchValueChanged = (value: any): void => {\n    const { queries } = this.props.samples;\n    const keyword = value.toLowerCase();\n\n    const filteredSamples = queries.filter((sample: any) => {\n      const name = sample.humanName.toLowerCase();\n      return name.toLowerCase().includes(keyword);\n    });\n\n    this.generateSamples(filteredSamples);\n  }\n\n\n  public onDocumentationLinkClicked = (event: any, item: any) => {\n    window.open(item.docLink, '_blank');\n  };\n\n  public getMethodStyle = (method: string) => {\n    const currentTheme = getTheme();\n\n    method = method.toString().toUpperCase();\n    switch (method) {\n      case 'GET':\n        return currentTheme.palette.green;\n\n      case 'POST':\n        return currentTheme.palette.orangeLighter;\n\n      case 'PUT':\n        return currentTheme.palette.yellowDark;\n\n      case 'PATCH':\n        return currentTheme.palette.blue;\n\n      case 'DELETE':\n        return currentTheme.palette.red;\n\n      default:\n        return currentTheme.palette.green;\n    }\n  };\n\n  public generateSamples(samples: any) {\n    const map = new Map();\n    const categories: any[] = [];\n\n    let isCollapsed = false;\n    let previousCount = 0;\n    let count = 0;\n\n    for (const query of samples) {\n      if (!map.has(query.category)) {\n        map.set(query.category, true);\n        count = samples.filter((sample: ISampleQuery) => sample.category === query.category).length;\n        if (categories.length > 0) {\n          isCollapsed = true;\n        }\n        categories.push({\n          name: query.category,\n          key: query.category,\n          startIndex: previousCount,\n          isCollapsed,\n          count,\n        });\n        previousCount += count;\n      }\n    }\n\n    this.setState({\n      groupedList: {\n        samples,\n        categories,\n      }\n    });\n  }\n\n  public renderItemColumn = (item: any, index: number | undefined, column: IColumn | undefined) => {\n    const classes = classNames(this.props);\n    const hostId: string = getId('tooltipHost');\n\n    if (column) {\n      const queryContent = item[column.fieldName as keyof any] as string;\n\n      switch (column.key) {\n\n        case 'button':\n          return <IconButton\n            className={classes.docLink}\n            iconProps={{ iconName: 'NavigateExternalInline' }}\n            title={item.docLink}\n            ariaLabel={item.docLink}\n            onClick={(event) => this.onDocumentationLinkClicked(event, item)}\n          />;\n\n        case 'method':\n          return <span className={classes.badge}\n            style={{ color: this.getMethodStyle(item.method) }}\n          >{item.method}</span>;\n\n        default:\n          return <>\n            <TooltipHost\n              content={queryContent}\n              id={hostId}\n              calloutProps={{ gapSpace: 0 }}\n              styles={{ root: { display: 'inline-block' } }}\n            >\n              <span aria-labelledby={hostId} className={classes.queryContent}>\n                <FormattedMessage id={queryContent} />\n              </span>\n            </TooltipHost>\n          </>\n            ;\n      }\n    }\n  };\n\n  public renderRow = (props: any): any => {\n    const { tokenPresent } = this.props;\n    const classes = classNames(this.props);\n    let selectionDisabled = false;\n\n    if (props) {\n      if (!tokenPresent && props.item.method !== 'GET') {\n        selectionDisabled = true;\n      }\n      return (\n        <div className={classes.groupHeader}>\n          <DetailsRow {...props}\n            className={classes.queryRow + ' ' + (selectionDisabled ? classes.rowDisabled : '')}\n            data-selection-disabled={selectionDisabled} />\n        </div>\n      );\n    }\n  };\n\n  public renderGroupHeader = (props: any): any => {\n    const classes = classNames(this.props);\n\n    return (\n      <div aria-label={props.group!.name} onClick={this.onToggleCollapse(props)}>\n        <div className={classes.groupHeaderRow}>\n          <IconButton\n            className={`${classes.pullLeft} ${classes.groupHeaderRowIcon}`}\n            iconProps={{ iconName: props.group!.isCollapsed ? 'ChevronRightSmall' : 'ChevronDownSmall' }}\n            title={props.group!.isCollapsed ?\n              `Expand ${props.group!.name}` : `Collapse ${props.group!.name}`}\n            ariaLabel='expand collapse group'\n            onClick={() => this.onToggleCollapse(props)}\n          />\n          <div className={classes.groupTitle}>\n            <span>{props.group!.name}</span>\n            <span className={classes.headerCount}>({props.group!.count})</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private renderDetailsHeader() {\n    return (\n      <div />\n    );\n  }\n\n  private onToggleCollapse(props: any): () => void {\n    return () => {\n      props!.onToggleCollapse!(props!.group!);\n    };\n  }\n\n  public render() {\n    const { error, pending } = this.props.samples;\n    const classes = classNames(this.props);\n\n    if (pending) {\n      return (\n        <Spinner\n          className={classes.spinner}\n          size={SpinnerSize.large}\n          label='loading samples ...' ariaLive='assertive' labelPosition='top' />\n      );\n    }\n\n    const { groupedList } = this.state;\n    const columns = [\n      { key: 'method', name: '', fieldName: 'method', minWidth: 20, maxWidth: 50 },\n      { key: 'category', name: '', fieldName: 'humanName', minWidth: 105, maxWidth: 205 },\n      { key: 'button', name: '', fieldName: 'button', minWidth: 15, maxWidth: 15, },\n    ];\n\n    const selection = new Selection({\n      onSelectionChanged: () => {\n        const { actions } = this.props;\n        const selectedQuery = selection.getSelection()[0] as any;\n        if (!selectedQuery) { return; }\n\n        const sampleQuery: IQuery = {\n          sampleUrl: GRAPH_URL + selectedQuery.requestUrl,\n          selectedVerb: selectedQuery.method,\n          sampleBody: selectedQuery.postBody,\n          sampleHeaders: selectedQuery.headers || []\n        };\n\n        if (actions) {\n          if (sampleQuery.selectedVerb === 'GET') {\n            sampleQuery.sampleBody = JSON.parse('{}');\n            actions.runQuery(sampleQuery);\n          } else {\n            sampleQuery.sampleBody = (sampleQuery.sampleBody) ? JSON.parse(sampleQuery.sampleBody) : undefined;\n          }\n          actions.setSampleQuery(sampleQuery);\n        }\n      }\n    });\n\n    return (\n      <div>\n        <SearchBox className={classes.searchBox} placeholder='Search'\n          onChange={(value) => this.searchValueChanged(value)}\n        />\n        <hr />\n        {error && <MessageBar messageBarType={MessageBarType.warning}\n          isMultiline={true}\n          dismissButtonAriaLabel='Close'>\n          You are viewing a cached set of samples because of a network connection failure.\n        </MessageBar>}\n        <DetailsList className={classes.queryList}\n          layoutMode={DetailsListLayoutMode.justified}\n          onRenderItemColumn={this.renderItemColumn}\n          items={groupedList.samples}\n          selectionMode={SelectionMode.none}\n          columns={columns} groups={groupedList.categories}\n          selection={selection}\n          groupProps={{\n            showEmptyGroups: true,\n            onRenderHeader: this.renderGroupHeader,\n          }}\n          onRenderRow={this.renderRow}\n          onRenderDetailsHeader={this.renderDetailsHeader}\n        />\n      </div>\n    );\n  }\n\n}\nfunction mapStateToProps(state: any) {\n  return {\n    tokenPresent: !!state.authToken,\n    samples: state.samples\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch): object {\n  return {\n    actions: bindActionCreators({\n      ...queryActionCreators,\n      ...queryInputActionCreators,\n      ...samplesActionCreators\n    }, dispatch),\n  };\n}\n\n// @ts-ignore\nconst styledSampleQueries = styled(SampleQueries, sidebarStyles);\nexport default connect(mapStateToProps, mapDispatchToProps)(styledSampleQueries);\n","import { Pivot, PivotItem } from 'office-ui-fabric-react';\nimport React from 'react';\n\nimport History from './history/History';\nimport SampleQueries from './sample-queries/SampleQueries';\n\nexport const Sidebar = () => {\n  return (\n    <div>\n      <Pivot>\n        <PivotItem headerText='Sample Queries' itemIcon='Rocket'>\n          <SampleQueries />\n        </PivotItem>\n        <PivotItem headerText='History' itemIcon='History'>\n          <History />\n        </PivotItem>\n      </Pivot>\n    </div>\n  );\n};\n","import {\n  FocusTrapZone,\n  IconButton,\n  ITheme,\n  MessageBar,\n  MessageBarType,\n  styled\n} from 'office-ui-fabric-react';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { loadGETheme } from '../../themes';\nimport { ThemeContext } from '../../themes/theme-context';\nimport { Mode } from '../../types/action';\nimport { IInitMessage, IThemeChangedMessage } from '../../types/query-runner';\nimport { ISidebarProps } from '../../types/sidebar';\nimport { clearQueryError } from '../services/actions/error-action-creator';\nimport { runQuery } from '../services/actions/query-action-creators';\nimport { setSampleQuery } from '../services/actions/query-input-action-creators';\nimport { addRequestHeader } from '../services/actions/request-headers-action-creators';\nimport { changeTheme } from '../services/actions/theme-action-creator';\nimport { toggleSidebar } from '../services/actions/toggle-sidebar-action-creator';\nimport { appStyles } from './App.styles';\nimport { Authentication } from './authentication';\nimport { classNames } from './classnames';\nimport { QueryResponse } from './query-response';\nimport { QueryRunner } from './query-runner';\nimport { parse } from './query-runner/util/iframe-message-parser';\nimport { Sidebar } from './sidebar/Sidebar';\n\ninterface IAppProps {\n  theme?: ITheme;\n  styles?: object;\n  error: object | null;\n  graphExplorerMode: Mode;\n  sidebarProperties: ISidebarProps;\n  actions: {\n    addRequestHeader: Function;\n    clearQueryError: Function;\n    setSampleQuery: Function;\n    runQuery: Function;\n    toggleSidebar: Function;\n  };\n}\n\ninterface IAppState {\n  selectedVerb: string;\n  showToggle: boolean;\n}\n\nclass App extends Component<IAppProps, IAppState> {\n\n  private mediaQueryList = window.matchMedia('(max-width: 767px)');\n\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = {\n      selectedVerb: 'GET',\n      showToggle: false,\n    };\n  }\n\n  public componentDidMount = () => {\n    this.displayToggleButton(this.mediaQueryList);\n    this.mediaQueryList.addListener(this.displayToggleButton);\n\n    const { actions } = this.props;\n    const whiteListedDomains = [\n      'https://docs.microsoft.com',\n      'https://review.docs.microsoft.com',\n      'https://ppe.docs.microsoft.com',\n      'https://docs.azure.cn'\n    ];\n\n    // Notify host document that GE is ready to receive messages\n    const hostOrigin = new URLSearchParams(location.search).get('host-origin');\n    const originIsWhitelisted =\n      hostOrigin && whiteListedDomains.indexOf(hostOrigin) !== -1;\n\n    if (hostOrigin && originIsWhitelisted) {\n      window.parent.postMessage({ type: 'ready' }, hostOrigin);\n    }\n\n    // Listens for messages from host document\n    window.addEventListener('message', this.receiveMessage, false);\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const base64Token = urlParams.getAll('query')[0];\n\n    if (!base64Token) {\n      return;\n    }\n\n    const data = JSON.parse(atob(base64Token));\n    const { sampleVerb, sampleHeaders, sampleUrl, sampleBody } = data;\n\n    const query = {\n      sampleUrl,\n      sampleBody,\n      sampleHeaders,\n      selectedVerb: sampleVerb\n    };\n\n    if (actions) {\n      actions.setSampleQuery(query);\n    }\n  };\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('message', this.receiveMessage);\n    this.mediaQueryList.removeListener(this.displayToggleButton);\n  }\n\n  private handleThemeChangeMsg = (msg: IThemeChangedMessage) => {\n    loadGETheme(msg.theme);\n\n    // @ts-ignore\n    this.props.actions!.changeTheme(msg.theme);\n  };\n\n  private receiveMessage = (event: MessageEvent): void => {\n    const msgEvent: IThemeChangedMessage | IInitMessage = event.data;\n\n    switch (msgEvent.type) {\n      case 'init':\n        this.handleInitMsg(msgEvent);\n        break;\n      case 'theme-changed':\n        this.handleThemeChangeMsg(msgEvent);\n        break;\n      default:\n        return;\n    }\n  };\n\n  private handleInitMsg = (msg: IInitMessage) => {\n    const { actions } = this.props;\n    const { verb, headers, url, body }: any = parse(msg.code);\n\n    if (actions) {\n      actions.setSampleQuery({\n        sampleUrl: url,\n        selectedVerb: verb\n      });\n    }\n\n    // Sets selected verb in App Component\n    this.handleSelectVerb(verb);\n\n    /**\n     * We are delaying this by 1 second here so that we give Monaco's formatter time to initialize.\n     * If we don't put this delay, the body won't be formatted.\n     */\n    setTimeout(() => {\n      if (actions) {\n        actions.setSampleQuery({\n          sampleUrl: url,\n          selectedVerb: verb,\n          sampleBody: body\n        });\n      }\n    }, 1000);\n\n    if (actions) {\n      const requestHeaders = headers.map((header: any) => {\n        return {\n          name: Object.keys(header)[0],\n          value: Object.values(header)[0]\n        };\n      });\n      actions.addRequestHeader(requestHeaders);\n    }\n  };\n\n  public handleSelectVerb = (verb: string) => {\n    this.setState({\n      selectedVerb: verb\n    });\n  };\n\n  public toggleSidebar = (): void => {\n    const { sidebarProperties } = this.props;\n    const properties = { ...sidebarProperties };\n    properties.showSidebar = !properties.showSidebar;\n    this.props.actions!.toggleSidebar(properties);\n  }\n\n  public displayToggleButton = (mediaQueryList: any) => {\n    const showToggle = mediaQueryList.matches;\n    let showSidebar = true;\n    if (showToggle) {\n      showSidebar = false;\n    }\n\n    const properties = {\n      showToggle,\n      showSidebar\n    };\n\n    this.props.actions!.toggleSidebar(properties);\n  }\n\n  public render() {\n    const classes = classNames(this.props);\n    const { graphExplorerMode, error, actions, sidebarProperties }: any = this.props;\n    const { showToggle, showSidebar } = sidebarProperties;\n\n    let displayContent = true;\n    if (graphExplorerMode === Mode.Complete) {\n      if (showToggle && showSidebar) {\n        displayContent = false;\n      }\n    }\n\n    const layout =\n      graphExplorerMode === Mode.TryIt\n        ? 'col-xs-12 col-sm-12'\n        : 'col-xs-12 col-sm-12 col-lg-9 col-md-8';\n    return (\n      // @ts-ignore\n      <ThemeContext.Provider value={this.props.appTheme}>\n        <FocusTrapZone>\n          <div className={`container-fluid ${classes.app}`}>\n            <div className='row'>\n              {graphExplorerMode === Mode.Complete && (\n                <div className={`col-sm-12 col-lg-3 col-md-4 ${classes.sidebar}`}>\n                  {showToggle && <IconButton\n                    iconProps={{ iconName: 'GlobalNavButton' }}\n                    className={classes.sidebarToggle}\n                    title='Remove sidebar'\n                    ariaLabel='Remove sidebar'\n                    onClick={this.toggleSidebar}\n                  />}\n                  {showSidebar && <Sidebar />}\n                </div>\n              )}\n              <div className={layout}>\n                {graphExplorerMode === Mode.Complete && displayContent && <Authentication />}\n                {graphExplorerMode === Mode.TryIt && (\n                  <div style={{ marginBottom: 8 }}>\n                    <MessageBar\n                      messageBarType={MessageBarType.warning}\n                      isMultiline={true}\n                    >\n                      <p>\n                        To try operations other than GET or to access your own data, sign in to\n                      <a className={classes.toGraphExplorer}\n                          tabIndex={0}\n                          href='https://developer.microsoft.com/en-us/graph/graph-explorer' target='_blank'>\n                          Graph Explorer.\n                      </a>\n                      </p>\n                    </MessageBar>\n                  </div>\n                )}\n\n                {displayContent && <>\n                  <div style={{ marginBottom: 8 }}>\n                    <QueryRunner onSelectVerb={this.handleSelectVerb} />\n                  </div>\n                  {error && (\n                    <MessageBar\n                      messageBarType={MessageBarType.error}\n                      isMultiline={false}\n                      onDismiss={actions.clearQueryError}\n                    >\n                      {`${error.statusText} - ${error.status}`}\n                    </MessageBar>\n                  )}\n                  {\n                    // @ts-ignore\n                    <QueryResponse verb={this.state.selectedVerb} />\n                  }\n                </>}\n              </div>\n            </div>\n          </div>\n        </FocusTrapZone>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    error: state.queryRunnerError,\n    receivedSampleQuery: state.sampleQuery,\n    graphExplorerMode: state.graphExplorerMode,\n    appTheme: state.theme,\n    sidebarProperties: state.sidebarProperties,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    actions: bindActionCreators({\n      clearQueryError,\n      runQuery,\n      setSampleQuery,\n      addRequestHeader,\n      toggleSidebar,\n      changeTheme: (newTheme: string) => {\n        return (disp: Function) => disp(changeTheme(newTheme));\n      }\n    }, dispatch)\n  };\n};\n\nconst StyledApp = styled(App, appStyles);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StyledApp);\n","import { headersAdded } from '../../../services/reducers/request-headers-reducers';\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * In the request snippet the body is represented in the format below.\n * `\n *\n * { name: user}\n * `\n * Observe that it is preceded by a newline followed by curly braces. We use these properties to\n * start extracting the body from the request snippet. When a newline is followed by a curly brace\n * we know that we have encountered they body section of the request snippet.\n *\n * @param payload\n */\nfunction extractBody(payload: string): string {\n  const NEWLINE = /\\n/;\n  const OPEN_BRACE = /{/;\n  let current = 1;\n  let word = '';\n\n  while (current < payload.length) {\n    const char = payload[current];\n    const previousCharIsNewLine = NEWLINE.test(payload[current - 1]);\n    const currentCharIsOpeningBrace = OPEN_BRACE.test(char);\n\n    /**\n     * If the previous character is a new line and the current character is an opening brace\n     * then the body part of the snippet payload has been encountered. We read the body and\n     * return it.\n     */\n    if (previousCharIsNewLine) {\n      if (currentCharIsOpeningBrace) {\n        let start = current;\n\n        /**\n         * Since we know the body is the last part of the snippet payload, we start reading it from the first\n         * open curly brace to the end of the payload.\n         */\n        while (start < payload.length) {\n          word += payload[start];\n          start++;\n        }\n      }\n    }\n    current++;\n  }\n\n  return word.replace(/\\n/g, '');\n}\n\n/**\n * Headers in a request snippet are represented in the format below.\n * `\n * POST https://graph.microsoft.com/v1/me\n * Content-type: application/json\n *\n * `\n * We observe that headers begin after the second newline of the request snippet and end when a newline\n * is followed by a space. We use these properties to extract headers from the request snippet.\n *\n * @param payload\n */\nfunction extractHeaders(payload: string): object[] {\n  const SPACE = /\\s/;\n  const NEWLINE = /\\n/;\n\n  const headers: any = [];\n  let header: any = {};\n  let newlineCount = 0;\n  let positionOfSecondNewLine = 0;\n  let word = '';\n\n  for (let i = 0; i < payload.length; i++) {\n\n    // Gets the position of the second newline. We start reading headers from the second newline.\n    if (NEWLINE.test(payload[i]) && newlineCount <= 2) {\n      newlineCount++;\n      positionOfSecondNewLine = i;\n    }\n\n    if (newlineCount === 2) {\n      for (let n = positionOfSecondNewLine + 1; n < payload.length; n++) {\n        const char = payload[n];\n        const nextChar = payload[n + 1];\n        const isDelimeter = NEWLINE.test(char);\n\n\n        word += char;\n        if (isDelimeter) {\n          const spl = word.trim().split(':');\n\n          header[spl[0]] = spl[1].trim();\n          headers.push(header);\n          header = {};\n          word = '';\n        }\n\n        if (NEWLINE.test(char) && SPACE.test(nextChar)) {\n          return headers;\n        }\n      }\n    }\n  }\n  return headers;\n}\n\n/**\n * Extracts the url from a payload\n *\n * @param payload\n * Has the form \\n payload \\n\n */\nfunction extractUrl(payload: string): object[] {\n  const domains = ['https://graph.microsoft.com/v1.0', 'https://graph.microsoft.com/beta'];\n  const result: object[] = [];\n\n  // The payload has the form \\n sampleUrl \\n. After splitting it on new lines the sampleUrl will be at index 1\n  // of the resulting array\n  const sampleUrl = payload.split('\\n')[1];\n\n\n  // The sampleUrl has the format VERB URL, after splitting it on the space character the VERB will be at index 0\n  // and the URL at index 1\n  const urlParts = sampleUrl.split(' ');\n  const verb = urlParts[0];\n  let url = urlParts[1];\n\n\n  let sampleDomain = '';\n  domains.forEach(domain => {\n    if (url.includes(domain)) {\n      sampleDomain = domain;\n    }\n  });\n\n  // Some urls do not have a domain only the path. For such urls we append the domain.\n  if (!sampleDomain) {\n    url = domains[0] + url;\n  }\n\n  result.push({ verb, url });\n\n  return result;\n}\n\nexport function parse(httpRequestMessage: string) {\n  /**\n   * The parser expects the http request message to start and end with a new line character, however,\n   * the request message it receives does not have them. Hence, we prefix and suffix the httpRequestMessage\n   * with new line characters.\n   */\n  const payload = `\\n${httpRequestMessage}\\n `;\n\n  const url = extractUrl(payload);\n  const headers = extractHeaders(payload);\n  const body = extractBody(payload);\n\n  const tokens = [...url, { body }];\n\n  const result = tokens.reduce((obj: object, item: object) => {\n    return { ...obj, ...item };\n  }, {});\n\n  return { ...result, headers };\n}\n","import enUS from './en-US';\nimport deDe from './de-DE';\nimport esES from './es-ES';\nimport frFR from './fr-FR';\nimport jaJP from './ja-JP';\nimport ptBR from './pt-BR';\nimport ruRU from './ru-RU';\nimport zhCN from './zh-CN';\n\nexport default {\n  'en-US': enUS,\n  'de-DE': deDe,\n  'es-ES': esES,\n  'fr-FR': frFR,\n  'ja-JP': jaJP,\n  'pt-BR': ptBR,\n  'ru-RU': ruRU,\n  'zh-CN': zhCN\n}\n","import { IAction } from '../../types/action';\n\nconst localStorageMiddleware = (store: any) => (next: any) => (action: IAction) => {\n    next(action);\n    if (action.type === 'AUTHENTICATE_USER') {\n      localStorage.setItem('authenticatedUser', JSON.stringify(action.response));\n    }\n    return next(action);\n  };\n\nexport default localStorageMiddleware;\n","import { IAction } from '../../../types/action';\nimport {\n  FETCH_ADAPTIVE_CARD_ERROR,\n  FETCH_ADAPTIVE_CARD_PENDING,\n  FETCH_ADAPTIVE_CARD_SUCCESS\n} from '../redux-constants';\n\nconst initialState = {\n  pending: false,\n  data: ''\n};\n\nexport function adaptiveCard(state = initialState, action: IAction): any {\n  switch (action.type) {\n    case FETCH_ADAPTIVE_CARD_SUCCESS:\n      return {\n        pending: false,\n        data: action.response\n      };\n    case FETCH_ADAPTIVE_CARD_PENDING:\n      return {\n        pending: true,\n        data: null\n      };\n    case FETCH_ADAPTIVE_CARD_ERROR:\n      return {\n        pending: false,\n        data: null\n      };\n    default:\n      return state;\n  }\n}","import { ISampleQuery } from \"../../../../types/query-runner\";\n\n\nexport const queries: ISampleQuery[]  = [\n    {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"my profile\",\n      \"requestUrl\": \"/v1.0/me/\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/users\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"my photo\",\n      \"requestUrl\": \"/v1.0/me/photo/$value\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/profilephoto_get\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"my mail\",\n      \"requestUrl\": \"/v1.0/me/messages\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"all the items in my drive\",\n      \"requestUrl\": \"/v1.0/me/drive/root/children\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/driveitem-list-children?view=graph-rest-1.0\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"items trending around me\",\n      \"requestUrl\": \"/beta/me/insights/trending\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/insights_list_trending\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Getting Started\",\n      \"method\": \"GET\",\n      \"humanName\": \"my manager\",\n      \"requestUrl\": \"/v1.0/me/manager\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_manager\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"my direct reports\",\n      \"requestUrl\": \"/v1.0/me/directReports\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_directreports\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"all users in the organization\",\n      \"requestUrl\": \"/v1.0/users\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/users\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"all users in the Finance department\",\n      \"requestUrl\": \"/v1.0/users?$filter=Department eq 'Finance'\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/users\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"my skills\",\n      \"requestUrl\": \"/v1.0/me/?$select=displayName,skills\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"user by email\",\n      \"requestUrl\": \"/v1.0/users/{user-mail}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/user\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"all my Planner tasks\",\n      \"requestUrl\": \"/beta/me/planner/tasks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/resources/planner_overview\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"POST\",\n      \"humanName\": \"create user\",\n      \"requestUrl\": \"/v1.0/users\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_post_users\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"accountEnabled\\\": true,\\r\\n        \\\"city\\\": \\\"Seattle\\\",\\r\\n        \\\"country\\\": \\\"United States\\\",\\r\\n        \\\"department\\\": \\\"Sales & Marketing\\\",\\r\\n        \\\"displayName\\\": \\\"Melissa Darrow\\\",\\r\\n        \\\"givenName\\\": \\\"Melissa\\\",\\r\\n        \\\"jobTitle\\\": \\\"Marketing Director\\\",\\r\\n        \\\"mailNickname\\\": \\\"MelissaD\\\",\\r\\n        \\\"passwordPolicies\\\": \\\"DisablePasswordExpiration\\\",\\r\\n        \\\"passwordProfile\\\": {\\r\\n            \\\"password\\\": \\\"Test1234\\\",\\r\\n            \\\"forceChangePasswordNextSignIn\\\": false\\r\\n        },\\r\\n        \\\"officeLocation\\\": \\\"131/1105\\\",\\r\\n        \\\"postalCode\\\": \\\"98052\\\",\\r\\n        \\\"preferredLanguage\\\": \\\"en-US\\\",\\r\\n        \\\"state\\\": \\\"WA\\\",\\r\\n        \\\"streetAddress\\\": \\\"9256 Towne Center Dr., Suite 400\\\",\\r\\n        \\\"surname\\\": \\\"Darrow\\\",\\r\\n        \\\"mobilePhone\\\": \\\"+1 206 555 0110\\\",\\r\\n        \\\"usageLocation\\\": \\\"US\\\",\\r\\n        \\\"userPrincipalName\\\": \\\"MelissaD@{domain}\\\"\\r\\n    }\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Users\",\n      \"method\": \"GET\",\n      \"humanName\": \"track user changes\",\n      \"requestUrl\": \"/v1.0/users/delta?$select=displayName,givenName,surname\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/delta_query_users\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"all groups in my organization\",\n      \"requestUrl\": \"/v1.0/groups\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/group\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"all groups I belong to\",\n      \"requestUrl\": \"/v1.0/me/memberOf\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_memberof\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"group members\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}/members\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/group_list_members\",\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"group's conversations\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}/conversations\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/group_list_conversations\",\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"group's events\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}/events\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/group_list_events\",\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"POST\",\n      \"humanName\": \"add favorite group\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}/addFavorite\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/group_addfavorite\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"items in a group drive\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}/drive/root/children\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/drive_get\",\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Groups\",\n      \"method\": \"GET\",\n      \"humanName\": \"track group changes\",\n      \"requestUrl\": \"/v1.0/groups/delta?$select=displayName,description\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/delta_query_groups\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"my high important mail\",\n      \"requestUrl\": \"/v1.0/me/messages?$filter=importance eq 'high'\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"my mails from an address\",\n      \"requestUrl\": \"/v1.0/me/messages?$filter=(from/emailAddress/address) eq '{user-mail}'\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"my mail that has 'Hello World'\",\n      \"requestUrl\": \"/v1.0/me/messages?$search=\\\"hello world\\\"\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"POST\",\n      \"humanName\": \"send an email\",\n      \"requestUrl\": \"/v1.0/me/sendMail\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_sendmail\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"message\\\": {\\r\\n            \\\"subject\\\": \\\"Meet for lunch?\\\",\\r\\n            \\\"body\\\": {\\r\\n                \\\"contentType\\\": \\\"Text\\\",\\r\\n                \\\"content\\\": \\\"The new cafeteria is open.\\\"\\r\\n            },\\r\\n            \\\"toRecipients\\\": [\\r\\n                {\\r\\n                    \\\"emailAddress\\\": {\\r\\n                    \\\"address\\\": \\\"garthf@contoso.com\\\"\\r\\n                    }\\r\\n                }\\r\\n            ]\\r\\n        }}\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"POST\",\n      \"humanName\": \"forward mail\",\n      \"requestUrl\": \"/v1.0/me/messages/{message-id}/forward\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/message_forward\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"comment\\\": \\\"FYI\\\",\\r\\n  \\\"toRecipients\\\": [\\r\\n    {\\r\\n      \\\"emailAddress\\\": {\\r\\n        \\\"address\\\": \\\"{user-mail}\\\",\\r\\n        \\\"name\\\": \\\"Alex Darrow\\\"\\r\\n      }\\r\\n    }\\r\\n  ]\\r\\n}\",\n      \"tip\": \"This query requires a message id. To get the ID, run the following query, find the message in the response and use its ID property: GET https://graph.microsoft.com/v1.0/me/messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"track email changes\",\n      \"requestUrl\": \"/v1.0/me/mailFolders/Inbox/messages/delta\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/delta_query_messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"email I'm @ mentioned\",\n      \"requestUrl\": \"/beta/me/messages?$filter=mentionsPreview/isMentioned eq true&$select=subject,sender,receivedDateTime\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/user_list_messages#request-2\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"GET\",\n      \"humanName\": \"my events for the next week\",\n      \"requestUrl\": \"/v1.0/me/calendarview?startdatetime={today}&enddatetime={next-week}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_calendarview\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"GET\",\n      \"humanName\": \"all events in my calendar\",\n      \"requestUrl\": \"/v1.0/me/events?$select=subject,body,bodyPreview,organizer,attendees,start,end,location\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_events\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"GET\",\n      \"humanName\": \"all my calendars\",\n      \"requestUrl\": \"/v1.0/me/calendars\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_calendars\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"POST\",\n      \"humanName\": \"find meeting time\",\n      \"requestUrl\": \"/v1.0/me/findMeetingTimes\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_findmeetingtimes\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"attendees\\\": [\\r\\n            {\\r\\n            \\\"emailAddress\\\": {\\r\\n                \\\"address\\\": \\\"{user-mail}\\\",\\r\\n                \\\"name\\\": \\\"Alex Darrow\\\"\\r\\n            },\\r\\n            \\\"type\\\": \\\"Required\\\"\\r\\n            }\\r\\n        ],\\r\\n        \\\"timeConstraint\\\": {\\r\\n            \\\"timeslots\\\": [\\r\\n            {\\r\\n            \\\"start\\\": {\\r\\n                \\\"dateTime\\\": \\\"{today}\\\",\\r\\n                \\\"timeZone\\\": \\\"Pacific Standard Time\\\"\\r\\n                },\\r\\n                \\\"end\\\": {\\r\\n                \\\"dateTime\\\": \\\"{next-week}\\\",\\r\\n                \\\"timeZone\\\": \\\"Pacific Standard Time\\\"\\r\\n                }\\r\\n            }\\r\\n            ]\\r\\n        },\\r\\n        \\\"locationConstraint\\\": {\\r\\n        \\\"isRequired\\\": \\\"false\\\",\\r\\n        \\\"suggestLocation\\\": \\\"true\\\",\\r\\n        \\\"locations\\\": [\\r\\n            {\\r\\n            \\\"displayName\\\": \\\"Conf Room 32/1368\\\",\\r\\n            \\\"locationEmailAddress\\\": \\\"conf32room1368@imgeek.onmicrosoft.com\\\"\\r\\n            }\\r\\n        ]\\r\\n        },\\r\\n        \\\"meetingDuration\\\": \\\"PT1H\\\"\\r\\n        }\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"POST\",\n      \"humanName\": \"schedule a meeting\",\n      \"requestUrl\": \"/v1.0/me/events\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_post_events\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"subject\\\": \\\"My event\\\",\\r\\n        \\\"start\\\": {\\r\\n            \\\"dateTime\\\": \\\"{today}\\\",\\r\\n            \\\"timeZone\\\": \\\"UTC\\\"\\r\\n        },\\r\\n        \\\"end\\\": {\\r\\n            \\\"dateTime\\\": \\\"{next-week}\\\",\\r\\n            \\\"timeZone\\\": \\\"UTC\\\"\\r\\n        }\\r\\n    }\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"POST\",\n      \"humanName\": \"add graph community call\",\n      \"requestUrl\": \"/v1.0/me/events\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_post_events\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"subject\\\": \\\"Microsoft Graph Community call\\\",\\r\\n  \\\"body\\\": {\\r\\n    \\\"contentType\\\": \\\"HTML\\\",\\r\\n    \\\"content\\\": \\\"Call link: https://aka.ms/mmkv1b Submit a question: https://aka.ms/ybuw2i\\\"\\r\\n  },\\r\\n  \\\"start\\\": {\\r\\n      \\\"dateTime\\\": \\\"2018-09-04T08:00:00\\\",\\r\\n      \\\"timeZone\\\": \\\"Pacific Standard Time\\\"\\r\\n  },\\r\\n  \\\"end\\\": {\\r\\n      \\\"dateTime\\\": \\\"2018-09-04T09:00:00\\\",\\r\\n      \\\"timeZone\\\": \\\"Pacific Standard Time\\\"\\r\\n  },\\r\\n  \\\"location\\\":{\\r\\n      \\\"displayName\\\":\\\"Skype for Business\\\"\\r\\n  },\\r\\n    \\\"recurrence\\\": {\\r\\n      \\\"pattern\\\": {\\r\\n      \\\"type\\\": \\\"relativeMonthly\\\",\\r\\n      \\\"interval\\\": 1,\\r\\n      \\\"daysOfWeek\\\": [ \\\"Tuesday\\\" ],\\r\\n      \\\"index\\\": \\\"first\\\"\\r\\n    },\\r\\n      \\\"range\\\": {\\r\\n        \\\"type\\\": \\\"noEnd\\\",\\r\\n        \\\"startDate\\\": \\\"2017-08-29\\\"\\r\\n      }\\r\\n    }\\r\\n}\",\n      \"tip\": \"Creates the monthly Microsoft Graph community call on your calendar.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Calendar\",\n      \"method\": \"GET\",\n      \"humanName\": \"track changes on my events for the next week\",\n      \"requestUrl\": \"/v1.0/me/calendarView/delta?startDateTime={today}&endDateTime={next-week}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/delta_query_events\",\n      \"tip\": \"This query uses date and time parameters. Use an ISO 8601 format. For example, \\\"2017-04-30T19:00:00.0000000\\\".\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Personal Contacts\",\n      \"method\": \"GET\",\n      \"humanName\": \"my contacts\",\n      \"requestUrl\": \"/v1.0/me/contacts\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_contacts\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Personal Contacts\",\n      \"method\": \"POST\",\n      \"humanName\": \"add contact\",\n      \"requestUrl\": \"/v1.0/me/contacts\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_post_contacts\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n    \\\"givenName\\\": \\\"Pavel\\\",\\r\\n    \\\"surname\\\": \\\"Bansky\\\",\\r\\n    \\\"emailAddresses\\\": [\\r\\n        {\\r\\n        \\\"address\\\": \\\"pavelb@fabrikam.onmicrosoft.com\\\",\\r\\n        \\\"name\\\": \\\"Pavel Bansky\\\"\\r\\n        }\\r\\n    ],\\r\\n    \\\"businessPhones\\\": [\\r\\n        \\\"+1 732 555 0102\\\"\\r\\n    ]\\r\\n}\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneDrive\",\n      \"method\": \"GET\",\n      \"humanName\": \"all the items in my drive\",\n      \"requestUrl\": \"/v1.0/me/drive/root/children\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/driveitem-list-children?view=graph-rest-1.0\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneDrive\",\n      \"method\": \"GET\",\n      \"humanName\": \"my recent files\",\n      \"requestUrl\": \"/v1.0/me/drive/recent\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/drive_recent\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneDrive\",\n      \"method\": \"GET\",\n      \"humanName\": \"files shared with me\",\n      \"requestUrl\": \"/v1.0/me/drive/sharedWithMe\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/drive_sharedwithme\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneDrive\",\n      \"method\": \"GET\",\n      \"humanName\": \"search my OneDrive\",\n      \"requestUrl\": \"/v1.0/me/drive/root/search(q='finance')?select=name,id,webUrl\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/item_search\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneDrive\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a folder\",\n      \"requestUrl\": \"/v1.0/me/drive/root/children\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/item_post_children\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"name\\\": \\\"New Folder\\\",\\r\\n  \\\"folder\\\": { }\\r\\n}\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"POST\",\n      \"humanName\": \"create session\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/createSession\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/excel\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{ \\\"persistChanges\\\": true }\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"GET\",\n      \"humanName\": \"worksheets in a workbook\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/worksheets\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/workbook_list_worksheets\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"POST\",\n      \"humanName\": \"add a new worksheet\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/worksheets/\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/worksheetcollection_add\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"name\\\": \\\"My New Sheet\\\"\\r\\n}\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"POST\",\n      \"humanName\": \"calculate loan payment\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/functions/pmt\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/workbook#functions\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n \\\"rate\\\": 0.035,\\r\\n \\\"nper\\\": 20,\\r\\n \\\"pv\\\": -2000\\r\\n}\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"GET\",\n      \"humanName\": \"used range in worksheet\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/worksheets('Sheet1')/usedRange\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/worksheet_usedrange\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"GET\",\n      \"humanName\": \"tables in worksheet\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/worksheets/Sheet1/tables\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/worksheet_list_tables\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Excel\",\n      \"method\": \"GET\",\n      \"humanName\": \"charts in worksheet\",\n      \"requestUrl\": \"/v1.0/me/drive/items/{drive-item-id}/workbook/worksheets('Sheet1')/charts\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/worksheet_list_charts\",\n      \"tip\": \"This query requires a driveItem id.  To find the ID of the driveItem that corresponds to an Excel Workbook, you can run: GET https://graph.microsoft.com/v1.0/me/drive/root/search(q='.xlsx')?select=name,id,webUrl.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"all Planner plans associated with a group\",\n      \"requestUrl\": \"/v1.0/groups/{group-id-with-plan}/planner/plans\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannergroup_list_plans\",\n      \"tip\": \"This query requires a group id.  To find the ID of a group you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/memberOf\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"Planner plan\",\n      \"requestUrl\": \"/v1.0/planner/plans/{plan-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannerplan_get\",\n      \"tip\": \"This query requires a plan id.  To find the ID of the plan you can run: GET https://graph.microsoft.com/v1.0/me/groups/{group-id}/plans.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update a Planner plan\",\n      \"requestUrl\": \"/v1.0/planner/plans/{plan-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannerplan_update\",\n      \"headers\": [\n          {\n              \"name\": \"If-Match\",\n              \"value\": \"{if-match}\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n    \\\"title\\\": \\\"Updated plan title\\\"\\r\\n}\",\n      \"tip\": \"This query requires a Plan ID and value of @odata.etag for a selected task. To find the ID of the Plan, you can run: GET https://graph.microsoft.com/v1.0/me/planner/tasks. To get the @odata.etag, run: GET https://graph.microsoft.com/v1.0/planner/plans/{plan-id}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"all buckets in Planner plan\",\n      \"requestUrl\": \"/v1.0/planner/plans/{plan-id}/buckets\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannerplan_list_buckets\",\n      \"tip\": \"This query requires a plan id.  To find the ID of the plan you can run: GET https://graph.microsoft.com/v1.0/me/groups/{group-id}/plans.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a bucket in Planner plan\",\n      \"requestUrl\": \"/v1.0/planner/buckets\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/planner_post_buckets\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"name\\\": \\\"{bucket-name}\\\",\\r\\n  \\\"planId\\\": \\\"{plan-id}\\\",\\r\\n  \\\"orderHint\\\": \\\" !\\\"\\r\\n}\",\n      \"tip\": \"This query requires a Plan id.  To find the ID of the Plan you can run: GET https://graph.microsoft.com/v1.0/me/planner/plans\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update a bucket in Planner plan\",\n      \"requestUrl\": \"/v1.0/planner/buckets/{bucket-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannerbucket_update\",\n      \"headers\": [\n          {\n              \"name\": \"If-Match\",\n              \"value\": \"{if-match}\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n    \\\"name\\\": \\\"Updated bucket name\\\"\\r\\n}\",\n      \"tip\": \"This query requires a bucket id and value of @odata.etag for a selected bucket.  To find the ID of the bucket run: GET https://graph.microsoft.com/v1.0/planner/plans/{plan-id}/buckets and then run: GET https://graph.microsoft.com/v1.0/planner/buckets/{bucket-id} to discover @odata.etag\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"all Planner tasks for a plan\",\n      \"requestUrl\": \"/v1.0/planner/plans/{plan-id}/tasks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannerplan_list_tasks\",\n      \"tip\": \"This query requires a plan id.  To find the ID of the plan you can run: GET https://graph.microsoft.com/v1.0/me/groups/{group-id}/plans.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"all my Planner tasks\",\n      \"requestUrl\": \"/v1.0/me/planner/tasks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/planner_overview\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"all Planner tasks for user\",\n      \"requestUrl\": \"/v1.0/users/{coworker-mail}/planner/tasks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/planneruser_list_tasks\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"Planner task by id\",\n      \"requestUrl\": \"/v1.0/planner/tasks/{task-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannertask_get\",\n      \"tip\": \"This query requires a task id.  To find the ID of the task you can run: GET https://graph.microsoft.com/v1.0/me/planner/tasks\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a Planner task\",\n      \"requestUrl\": \"/v1.0/planner/tasks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/planner_post_tasks\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"planId\\\": \\\"{plan-id}\\\",\\r\\n  \\\"title\\\": \\\"{task-title}\\\",\\r\\n  \\\"assignments\\\": {}\\r\\n}\",\n      \"tip\": \"This query requires a Plan id.  To find the ID of the Plan you can run: GET https://graph.microsoft.com/v1.0/me/planner/tasks\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update a Planner task\",\n      \"requestUrl\": \"/v1.0/planner/tasks/{task-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannertask_update\",\n      \"headers\": [\n          {\n              \"name\": \"If-Match\",\n              \"value\": \"{if-match}\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n    \\\"title\\\": \\\"Updated task title\\\"\\r\\n}\",\n      \"tip\": \"This query requires a task id and value of @odata.etag for a selected task.  To find the ID of the task and @odata.etag you can run: GET https://graph.microsoft.com/v1.0/me/planner/tasks\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Planner\",\n      \"method\": \"GET\",\n      \"humanName\": \"details for Planner task\",\n      \"requestUrl\": \"/v1.0/planner/tasks/{task-id}/details\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/plannertaskdetails_get\",\n      \"tip\": \"This query requires a task id.  To find the ID of the task you can run: GET https://graph.microsoft.com/v1.0/me/planner/tasks\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Insights\",\n      \"method\": \"GET\",\n      \"humanName\": \"my recent files\",\n      \"requestUrl\": \"/v1.0/me/drive/recent\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/drive_recent\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Insights (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"items trending around me\",\n      \"requestUrl\": \"/beta/me/insights/trending\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/insights_list_trending\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Insights (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"items shared with me\",\n      \"requestUrl\": \"/beta/me/insights/shared\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/insights_list_shared\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Insights (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"items viewed and modified by me\",\n      \"requestUrl\": \"/beta/me/insights/used\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/insights_list_used\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"People\",\n      \"method\": \"GET\",\n      \"humanName\": \"people I work with\",\n      \"requestUrl\": \"/v1.0/me/people\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_people\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"People\",\n      \"method\": \"GET\",\n      \"humanName\": \"people whose name starts with J\",\n      \"requestUrl\": \"/v1.0/me/people/?$search=j\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/person_get\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"People\",\n      \"method\": \"GET\",\n      \"humanName\": \"people relevant to a topic\",\n      \"requestUrl\": \"/v1.0/me/people/?$search=\\\"topic: contoso\\\"\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/person_get\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"GET\",\n      \"humanName\": \"get an open extension\",\n      \"requestUrl\": \"/v1.0/me?$select=id,displayName,mail,mobilePhone&$expand=extensions\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/opentypeextension\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"POST\",\n      \"humanName\": \"create an open extension\",\n      \"requestUrl\": \"/v1.0/me/extensions\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/opentypeextension_post_opentypeextension\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"@odata.type\\\":\\\"microsoft.graph.openTypeExtension\\\",    \\\"extensionName\\\":\\\"com.contoso.roamingSettings\\\",\\r\\n    \\\"theme\\\":\\\"dark\\\",\\r\\n    \\\"color\\\":\\\"purple\\\",\\r\\n    \\\"lang\\\":\\\"Japanese\\\"\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update an open extension\",\n      \"requestUrl\": \"/v1.0/me/extensions/{extension-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/opentypeextension_update\",\n      \"postBody\": \"{\\r\\n    \\\"theme\\\":\\\"light\\\",\\r\\n    \\\"color\\\":\\\"yellow\\\",\\r\\n    \\\"lang\\\":\\\"Swahili\\\"\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"GET\",\n      \"humanName\": \"get available schema extensions\",\n      \"requestUrl\": \"/v1.0/schemaExtensions\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_post_schemaextensions\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"GET\",\n      \"humanName\": \"filter groups by extension property value\",\n      \"requestUrl\": \"/v1.0/groups?$filter=adatumisv_courses/id eq '123'&$select=id,displayName,adatumisv_courses\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_post_schemaextensions\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a group with extension data\",\n      \"requestUrl\": \"/v1.0/groups\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_post_schemaextensions\",\n      \"postBody\": \"{\\r\\n    \\\"displayName\\\": \\\"Extensions sample group\\\",\\r\\n    \\\"description\\\": \\\"Extensions sample group\\\",\\r\\n    \\\"groupTypes\\\": [\\\"Unified\\\"],\\r\\n    \\\"mailEnabled\\\": true,\\r\\n    \\\"mailNickname\\\": \\\"extSample123\\\",\\r\\n    \\\"securityEnabled\\\": false,\\r\\n    \\\"adatumisv_courses\\\": {\\r\\n        \\\"id\\\":\\\"123\\\",\\r\\n        \\\"name\\\":\\\"New Managers\\\",\\r\\n        \\\"type\\\":\\\"Online\\\"\\r\\n    }\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Extensions\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update a group with extension data\",\n      \"requestUrl\": \"/v1.0/groups/{group-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/schemaextension_post_schemaextensions\",\n      \"postBody\": \"{\\r\\n   \\\"adatumisv_courses\\\": {\\r\\n        \\\"id\\\":\\\"123\\\",\\r\\n        \\\"name\\\":\\\"New Managers\\\",\\r\\n        \\\"type\\\":\\\"Online\\\"\\r\\n    }\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"GET\",\n      \"humanName\": \"my notebooks\",\n      \"requestUrl\": \"/v1.0/me/onenote/notebooks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/onenote\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"GET\",\n      \"humanName\": \"my sections\",\n      \"requestUrl\": \"/v1.0/me/onenote/sections\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/resources/section\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"GET\",\n      \"humanName\": \"my pages\",\n      \"requestUrl\": \"/v1.0/me/onenote/pages\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/section_list_pages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"POST\",\n      \"humanName\": \"create notebook\",\n      \"requestUrl\": \"/v1.0/me/onenote/notebooks\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/onenote_post_notebooks\",\n      \"postBody\": \"{\\r\\n  \\\"displayName\\\": \\\"My Notebook\\\"\\r\\n}\",\n      \"tip\": \"Update the Request Body and select Run Query.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"POST\",\n      \"humanName\": \"create section\",\n      \"requestUrl\": \"/v1.0/me/onenote/notebooks/{notebook-id}/sections\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/notebook_post_sections\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"displayName\\\": \\\"Section 1\\\"\\r\\n}\",\n      \"tip\": \"This query requires a notebook id.  To find the ID, you can run: GET https://graph.microsoft.com/v1.0/me/onenote/notebooks. \",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"OneNote\",\n      \"method\": \"POST\",\n      \"humanName\": \"create page\",\n      \"requestUrl\": \"/v1.0/me/onenote/sections/{section-id}/pages\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/section_post_pages\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/xhtml+xml\"\n          }\n      ],\n      \"postBody\": \"\\r\\n<!DOCTYPE html>\\r\\n<html>\\r\\n  <head>\\r\\n    <title>A page with a block of HTML</title>\\r\\n  </head>\\r\\n  <body>\\r\\n    <p>This page contains some <i>formatted</i> <b>text</b>.</p>\\r\\n  </body>\\r\\n</html>\",\n      \"tip\": \"This query requires a section id.  To find the ID, you can run: GET https://graph.microsoft.com/v1.0/me/onenote/sections.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"my organization's default SharePoint site\",\n      \"requestUrl\": \"/v1.0/sites/root\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_get\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate the document libraries under the root site\",\n      \"requestUrl\": \"/v1.0/sites/root/drives\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/drive_list#list-a-sites-drives\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"SharePoint site based on relative path of the site\",\n      \"requestUrl\": \"/v1.0/sites/{host-name}:/{server-relative-path}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_getbypath\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"Search for a SharePoint site by keyword\",\n      \"requestUrl\": \"/v1.0/sites?search=contoso\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_search\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate subsites of the root site\",\n      \"requestUrl\": \"/v1.0/sites/root/sites\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_list_subsites\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate site columns of the root site\",\n      \"requestUrl\": \"/v1.0/sites/root/columns\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_list_columns\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Sites\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate site content types of the root site\",\n      \"requestUrl\": \"/v1.0/sites/root/contentTypes\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/site_list_contenttypes\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Lists\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate the lists in the root site\",\n      \"requestUrl\": \"/v1.0/sites/root/lists\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/list_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Lists\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate list columns\",\n      \"requestUrl\": \"/v1.0/sites/root/lists/{list-id}/columns\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/list_list_columns\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Lists\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate list content types\",\n      \"requestUrl\": \"/v1.0/sites/root/lists/{list-id}/contentTypes\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/list_list_contenttypes\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Lists\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate the list items in a list\",\n      \"requestUrl\": \"/v1.0/sites/root/lists/{list-id}/items\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/listitem_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"SharePoint Lists\",\n      \"method\": \"GET\",\n      \"humanName\": \"Enumerate list items with specific column values\",\n      \"requestUrl\": \"/v1.0/sites/root/lists/{list-id}/items?$filter=fields/Title eq '{list-title}'\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/listitem_list\",\n      \"headers\": [\n          {\n              \"name\": \"Prefer\",\n              \"value\": \"allowthrottleablequeries\"\n          }\n      ],\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Batching\",\n      \"method\": \"POST\",\n      \"humanName\": \"Perform parallel GETs\",\n      \"requestUrl\": \"/v1.0/$batch\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/json_batching\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\\"requests\\\" : [{\\\"url\\\" : \\\"/me?$select=displayName,jobTitle,userPrincipalName\\\", \\\"method\\\" : \\\"GET\\\", \\\"id\\\" : \\\"1\\\"}, {\\\"url\\\" : \\\"/me/messages?$filter=importance eq 'high'&$select=from,subject,receivedDateTime,bodyPreview\\\", \\\"method\\\" : \\\"GET\\\", \\\"id\\\" : \\\"2\\\"}, {\\\"url\\\" : \\\"/me/events\\\", \\\"method\\\" : \\\"GET\\\", \\\"id\\\" : \\\"3\\\"}]  }\",\n      \"tip\": \"This query shows you how to use batching to get your user information, your messages, and your events.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Batching\",\n      \"method\": \"POST\",\n      \"humanName\": \"Combine a POST and a GET\",\n      \"requestUrl\": \"/v1.0/$batch\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/concepts/json_batching\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n \\\"requests\\\": [{\\r\\n   \\\"url\\\": \\\"/me/drive/root/children\\\",\\r\\n   \\\"method\\\": \\\"POST\\\",\\r\\n   \\\"id\\\": \\\"1\\\",\\r\\n   \\\"body\\\": {\\r\\n    \\\"name\\\": \\\"TestBatchingFolder\\\",\\r\\n    \\\"folder\\\": {}\\r\\n   },\\r\\n   \\\"headers\\\": {\\r\\n    \\\"Content-Type\\\": \\\"application/json\\\"\\r\\n   }\\r\\n  }, {\\r\\n   \\\"url\\\": \\\"/me/drive/root/children/TestBatchingFolder \\\",\\r\\n   \\\"method\\\": \\\"GET\\\",\\r\\n   \\\"id\\\": \\\"2\\\",\\r\\n   \\\"DependsOn\\\": [\\\"1\\\"]\\r\\n  }\\r\\n ]\\r\\n} \",\n      \"tip\": \"This query will create a folder called TestBatchingFolder in your OneDrive and return it back to you via a GET.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"my joined teams\",\n      \"requestUrl\": \"/v1.0/me/joinedTeams\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/user_list_joinedteams\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"members of a team\",\n      \"requestUrl\": \"/v1.0/groups/{group-id-for-teams}/members\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/group_list_memberof\",\n      \"tip\": \"This query requires a group id of the Team.  To find the group id of teams you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/joinedTeams\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"channels of a team which I am member of\",\n      \"requestUrl\": \"/v1.0/teams/{team-id}/channels\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/channel_list\",\n      \"tip\": \"This query requires a team id.  To find the team id of teams you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/joinedTeams\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"channel info\",\n      \"requestUrl\": \"/v1.0/teams/{team-id}/channels/{channel-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/channel_get\",\n      \"tip\": \"This query requires a team id and a channel id from that team. To find the team id  & channel id, you can run: 1) GET https://graph.microsoft.com/v1.0/me/joinedTeams 2) GET https://graph.microsoft.com/v1.0/teams/{team-id}/channels\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"POST\",\n      \"humanName\": \"create channel\",\n      \"requestUrl\": \"/v1.0/teams/{team-id}/channels\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/channel_post\",\n      \"postBody\": \"{\\r\\n   \\\"displayName\\\": \\\"Architecture Discussion\\\",\\r\\n   \\\"description\\\": \\\"This channel is where we debate all future architecture plans\\\"\\r\\n }\",\n      \"tip\": \"This query requires a team id.  To find the team id of teams you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/joinedTeams.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"apps in a team\",\n      \"requestUrl\": \"/v1.0/teams/{team-id}/installedApps?$expand=teamsAppDefinition\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/teamsappinstallation_list\",\n      \"tip\": \"This query requires a team id. To find the team id, you can run: GET https://graph.microsoft.com/v1.0/me/joinedTeams\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"tabs in a channel\",\n      \"requestUrl\": \"/v1.0/teams/{team-id}/channels/{channel-id}/tabs?$expand=teamsApp\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/teamstab_list\",\n      \"tip\": \"This query requires a team id and a channel id from that team. To find the team id  & channel id, you can run: 1) GET https://graph.microsoft.com/v1.0/me/joinedTeams 2) GET https://graph.microsoft.com/v1.0/teams/{team-id}/channels\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams\",\n      \"method\": \"GET\",\n      \"humanName\": \"items in a team drive\",\n      \"requestUrl\": \"/v1.0/groups/{group-id-for-teams}/drive/root/children\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/item_list_children\",\n      \"tip\": \"This query requires a group id of the Team.  To find the group id of Teams you belong to, you can run: GET https://graph.microsoft.com/v1.0/me/joinedTeams\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"messages (without replies) in a channel\",\n      \"requestUrl\": \"/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/channel_list_messages\",\n      \"tip\": \"This query requires a group id of the Team and channel id of the corresponding channel of that Team. To find the group id  & channel id, you can run: 1) GET https://graph.microsoft.com/beta/me/joinedTeams 2) GET https://graph.microsoft.com/beta/groups/{group-id-for-teams}/channels\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"message in a channel\",\n      \"requestUrl\": \"/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages/{message-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/channel_get_message\",\n      \"tip\": \"This query requires a group id of the Team, channel id of the corresponding channel of that Team and message id of the message you want to retrieve. To find the group id, channel id and message-id you can run: 1) GET https://graph.microsoft.com/beta/me/joinedTeams 2) GET https://graph.microsoft.com/beta/groups/{group-id-for-teams}/channels 3) GET https://graph.microsoft.com/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"replies to a message in channel\",\n      \"requestUrl\": \"/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages/{message-id}/replies\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/channel_list_messagereplies\",\n      \"tip\": \"This query requires a group id of the Team, channel id of the corresponding channel of that Team and message id of the message of which you need the replies. To find the group id, channel id and message-id you can run: 1) GET https://graph.microsoft.com/beta/me/joinedTeams 2) GET https://graph.microsoft.com/beta/groups/{group-id-for-teams}/channels 3) GET https://graph.microsoft.com/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"reply of a message\",\n      \"requestUrl\": \"/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages/{message-id}/replies/{reply-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/channel_get_messagereply\",\n      \"tip\": \"This query requires a group id of the Team, channel id of the corresponding channel of that Team, message id of the message of which you need the reply and the id of the specific reply. To find the group id, channel id, message-id and reply-id you can run: 1) GET https://graph.microsoft.com/beta/me/joinedTeams 2) GET https://graph.microsoft.com/beta/groups/{group-id-for-teams}/channels 3) GET https://graph.microsoft.com/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages 4) GET https://graph.microsoft.com/beta/teams/{group-id-for-teams}/channels/{channel-id}/messages/{message-id}/replies\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Microsoft Teams (beta)\",\n      \"method\": \"POST\",\n      \"humanName\": \"create chat thread\",\n      \"requestUrl\": \"/beta/teams/{team-id}/channels/{channel-id}/chatThreads\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/channel_post_chatthreads\",\n      \"postBody\": \"{\\r\\n\\\"rootMessage\\\": {\\r\\n       \\\"body\\\": {\\r\\n         \\\"contentType\\\": 2,\\r\\n         \\\"content\\\": \\\"Hello world\\\"\\r\\n       }\\r\\n   }\\r\\n }\",\n      \"tip\": \"This query requires a team id and a channel id from that team. To find the team id  & channel id, you can run: 1) GET https://graph.microsoft.com/beta/me/joinedTeams 2) GET https://graph.microsoft.com/beta/teams/{team-id}/channels\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"my inbox rules\",\n      \"requestUrl\": \"/beta/me/mailFolders/inbox/messagerules\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/resources/messagerule\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"my outlook categories\",\n      \"requestUrl\": \"/beta/me/outlook/masterCategories\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/outlookuser_list_mastercategories\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"get email headers\",\n      \"requestUrl\": \"/beta/me/messages?$select=internetMessageHeaders&$top=1\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/resources/message\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Outlook Mail\",\n      \"method\": \"GET\",\n      \"humanName\": \"list conference rooms\",\n      \"requestUrl\": \"/beta/me/findRooms\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/user_findrooms\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts\",\n      \"requestUrl\": \"/v1.0/security/alerts?$top=1\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts with 'High' severity\",\n      \"requestUrl\": \"/v1.0/security/alerts?$filter=Severity eq 'High'&$top=5\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts from 'Azure Security Center'\",\n      \"requestUrl\": \"/v1.0/security/alerts?$filter=vendorInformation/provider eq 'ASC'&$top=5\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts filter by 'Category'\",\n      \"requestUrl\": \"/v1.0/security/alerts?$filter=Category eq 'ransomware'&$top=5\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts filter by destination address\",\n      \"requestUrl\": \"/v1.0/security/alerts?$filter=networkConnections/any(d:d/destinationAddress eq '{destination-address}')\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"tip\": \"This query requires a destination address. Run https://graph.microsoft.com/v1.0/security/alerts?$top=1 and search the results for a destinationAddress property.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"alerts filter by 'Status'\",\n      \"requestUrl\": \"/v1.0/security/alerts?$filter=Status eq 'NewAlert'&$top=1\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"secure scores (beta)\",\n      \"requestUrl\": \"/beta/security/secureScores?$top=5\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/securescores_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"secure score control profiles (beta)\",\n      \"requestUrl\": \"/beta/security/secureScoreControlProfiles?$top=5\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/securescorecontrolprofiles_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"TI indicators (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicators-list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"GET\",\n      \"humanName\": \"security actions (beta)\",\n      \"requestUrl\": \"/beta/security/securityActions\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/securityactions-list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update alert\",\n      \"requestUrl\": \"/v1.0/security/alerts/{alert-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/alert_update\",\n      \"postBody\": \"{\\r\\n  \\\"assignedTo\\\": \\\"test@contoso.com\\\",\\r\\n  \\\"comments\\\": [\\\"Comment 0\\\", \\\"Comment 1\\\"],\\r\\n  \\\"tags\\\": [\\\"Tag 0\\\", \\\"Tag 1\\\"],\\r\\n  \\\"feedback\\\": \\\"truePositive\\\",\\r\\n  \\\"status\\\": \\\"newAlert\\\",\\r\\n  \\\"vendorInformation\\\": {\\r\\n    \\\"provider\\\": \\\"provider\\\",\\r\\n    \\\"providerVersion\\\": \\\"3.0\\\",\\r\\n    \\\"subProvider\\\": null,\\r\\n    \\\"vendor\\\": \\\"vendor\\\"\\r\\n  }\\r\\n}\",\n      \"tip\": \"This query requires an alert id. To find the ID of the alert, you can run: GET https://graph.microsoft.com/v1.0/security/alerts?$top=1\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"create TI indicator (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicators-post\",\n      \"postBody\": \"{\\r\\n  \\\"activityGroupNames\\\": [\\r\\n      \\\"activityGroupNames-value\\\"\\r\\n    ],\\r\\n  \\\"confidence\\\": 90,\\r\\n  \\\"description\\\": \\\"This is a test indicator for demo purpose.\\\",\\r\\n  \\\"expirationDateTime\\\": \\\"{next-week}\\\",\\r\\n  \\\"externalId\\\": \\\"Test-8586502158541347997MS342\\\",\\r\\n  \\\"fileHashType\\\": \\\"sha256\\\",\\r\\n  \\\"fileHashValue\\\": \\\"289a8e8c330c27ab893fb769db38046feaca9d0b11e0aaa416ba70b0a51d58a4\\\",\\r\\n  \\\"targetProduct\\\": \\\"Azure ATP\\\",\\r\\n  \\\"threatType\\\": \\\"WatchList\\\",\\r\\n  \\\"tlpLevel\\\": \\\"green\\\"\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"create multiple TI indicators (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/microsoft.graph.submitTiIndicators\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-submittiindicators\",\n      \"postBody\": \"{\\r\\n  \\\"value\\\": [\\r\\n    {\\r\\n      \\\"activityGroupNames\\\": [],\\r\\n      \\\"confidence\\\": 0,\\r\\n      \\\"description\\\": \\\"This is a test indicator for demo purpose. Take no action on any observables set in this indicator.\\\",\\r\\n      \\\"externalId\\\": \\\"Test-8586502120486653922MS812-0\\\",\\r\\n      \\\"fileHashType\\\": \\\"sha256\\\",\\r\\n      \\\"fileHashValue\\\": \\\"0c0ebb4c90fa39785745bcc5e5cb40e3db7791be030061e2818684bc128b8f97\\\",\\r\\n      \\\"killChain\\\": [],\\r\\n      \\\"malwareFamilyNames\\\": [],\\r\\n      \\\"severity\\\": 0,\\r\\n      \\\"tags\\\": [],\\r\\n      \\\"targetProduct\\\": \\\"Azure ATP\\\",\\r\\n      \\\"threatType\\\": \\\"WatchList\\\",\\r\\n      \\\"tlpLevel\\\": \\\"green\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"activityGroupNames\\\": [],\\r\\n      \\\"confidence\\\": 0,\\r\\n      \\\"description\\\": \\\"This is a test indicator for demo purpose. Take no action on any observables set in this indicator.\\\",\\r\\n      \\\"externalId\\\": \\\"Test-8586502120486653922MS812-1\\\",\\r\\n      \\\"fileHashType\\\": \\\"sha256\\\",\\r\\n      \\\"fileHashValue\\\": \\\"86267de22dbad234ecf97870fdcf1a0e31149ee7a5fb595c050f69ca00f3529e\\\",\\r\\n      \\\"killChain\\\": [],\\r\\n      \\\"malwareFamilyNames\\\": [],\\r\\n      \\\"severity\\\": 0,\\r\\n      \\\"tags\\\": [],\\r\\n      \\\"targetProduct\\\": \\\"Azure ATP\\\",\\r\\n      \\\"threatType\\\": \\\"WatchList\\\",\\r\\n      \\\"tlpLevel\\\": \\\"green\\\"\\r\\n    }\\r\\n  ]\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update a TI indicator (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/{id}\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-update\",\n      \"postBody\": \" {\\r\\n      \\\"additionalInformation\\\": \\\"Testing\\\"\\r\\n    }\",\n      \"tip\": \"This query requires the TI indicator id. To find the ID, you can run: GET https://graph.microsoft.com/beta/security/tiIndicators?$top=1\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"update multiple TI indicators (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/microsoft.graph.updateTiIndicators\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-updatetiindicators\",\n      \"postBody\": \"{\\r\\n  \\\"value\\\": [\\r\\n    {\\r\\n      \\\"id\\\": \\\"tiindicator-id-1\\\",\\r\\n      \\\"additionalInformation\\\": \\\"Testing\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"id\\\": \\\"tiindicator-id-2\\\",\\r\\n      \\\"additionalInformation\\\": \\\"Testing 2\\\"\\r\\n    }\\r\\n  ]\\r\\n}\",\n      \"tip\": \"This query requires the TI indicator id. To find the ID, you can run: GET https://graph.microsoft.com/beta/security/tiIndicators?$top=5\\r\\n\\r\\n \",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"create security action (beta)\",\n      \"requestUrl\": \"/beta/security/securityActions\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/securityactions-post\",\n      \"postBody\": \"{\\r\\n    \\\"name\\\": \\\"blockIp\\\",\\r\\n     \\\"vendorInformation\\\" :\\r\\n     {  \\\"provider\\\": \\\"Windows Defender ATP\\\",\\r\\n          \\\"vendor\\\": \\\"Microsoft\\\"\\r\\n      },\\r\\n    \\\"parameters\\\" : [\\r\\n      {\\\"name\\\": \\\"IP\\\", \\\"value\\\":\\\"1.2.3.4\\\" }\\r\\n    ]\\r\\n}\",\n      \"tip\": \"Change the provider, vendor and parameters are needed\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"DELETE\",\n      \"humanName\": \"delete TI indicator (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/{id}\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-delete\",\n      \"tip\": \"This query requires the TI indicator id. To find the ID, you can run: GET https://graph.microsoft.com/beta/security/tiIndicators?$top=1\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"delete multiple TI indicators (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/microsoft.graph.deleteTiIndicators\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-deletetiindicators\",\n      \"postBody\": \"{\\r\\n  \\\"value\\\": [\\r\\n    \\\"tiindicatorid-value1\\\",\\r\\n    \\\"tiindicatorid-value2\\\"\\r\\n  ]\\r\\n}\",\n      \"tip\": \"This query requires the TI indicator id. To find the ID, you can run: GET https://graph.microsoft.com/beta/security/tiIndicators?$top=5\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Security\",\n      \"method\": \"POST\",\n      \"humanName\": \"delete multiple TI indicators by external Id (beta)\",\n      \"requestUrl\": \"/beta/security/tiIndicators/microsoft.graph.deleteTiIndicatorsByExternalId\",\n      \"docLink\": \"https://docs.microsoft.com/en-us/graph/api/tiindicator-deletetiindicatorsbyexternalid\",\n      \"postBody\": \"{\\r\\n  \\\"value\\\": [\\r\\n    \\\"tiindicator-externalId-value1\\\",\\r\\n     \\\"tiindicator-externalId-value2\\\"\\r\\n  ]\\r\\n}\",\n      \"tip\": \"This query requires the TI indicator external id. To find the ID, you can run: GET https://graph.microsoft.com/beta/security/tiIndicators?$top=5\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"User Activities\",\n      \"method\": \"PUT\",\n      \"humanName\": \"create a user activity and history item\",\n      \"requestUrl\": \"/v1.0/me/activities/uniqueIdInAppContext\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/projectrome_put_activity#example-2---deep-insert\",\n      \"headers\": [\n          {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n    \\\"appActivityId\\\": \\\"uniqueIdInAppContext\\\",\\r\\n    \\\"activitySourceHost\\\": \\\"https://graphexplorer.blob.core.windows.net\\\",\\r\\n    \\\"userTimezone\\\": \\\"America/Los Angeles\\\",\\r\\n    \\\"appDisplayName\\\": \\\"Graph Explorer\\\",\\r\\n    \\\"activationUrl\\\": \\\"https://developer.microsoft.com/en-us/graph/graph-explorer\\\",\\r\\n    \\\"fallbackUrl\\\": \\\"https://developer.microsoft.com/en-us/graph/graph-explorer\\\",\\r\\n    \\\"contentInfo\\\": {\\r\\n        \\\"@context\\\": \\\"http://schema.org\\\",\\r\\n        \\\"@type\\\": \\\"CreativeWork\\\",\\r\\n        \\\"author\\\": \\\"Jennifer Booth\\\",\\r\\n        \\\"name\\\": \\\"Graph Explorer User Activity\\\"\\r\\n    },\\r\\n    \\\"visualElements\\\": {\\r\\n        \\\"attribution\\\": {\\r\\n            \\\"iconUrl\\\": \\\"https://graphexplorer.blob.core.windows.net/explorerIcon.png\\\",\\r\\n            \\\"alternateText\\\": \\\"Microsoft Graph Explorer\\\",\\r\\n            \\\"addImageQuery\\\": \\\"false\\\"\\r\\n        },\\r\\n        \\\"description\\\": \\\"A user activity made through the Microsoft Graph Explorer\\\",\\r\\n        \\\"backgroundColor\\\": \\\"#008272\\\",\\r\\n        \\\"displayText\\\": \\\"Graph Explorer Sample User Activity\\\",\\r\\n        \\\"content\\\": {\\r\\n            \\\"$schema\\\": \\\"http://adaptivecards.io/schemas/adaptive-card.json\\\",\\r\\n            \\\"type\\\": \\\"AdaptiveCard\\\",\\r\\n            \\\"body\\\":\\r\\n            [{\\r\\n                \\\"type\\\": \\\"TextBlock\\\",\\r\\n                \\\"text\\\": \\\"With activities, developers have a way to capture the unique tasks for users of their app which flow seamlessly across any platform and device, allowing them to quickly resume working on their preferred screen. Using the Activity Feed, developers can create a human-centric view of the tasks most important to users helping reduce friction when switching from web to mobile to PC and beyond.\\\"\\r\\n            }]\\r\\n        }\\r\\n    },\\r\\n    \\\"historyItems\\\":[\\r\\n        {\\r\\n            \\\"userTimezone\\\": \\\"America/Los Angeles\\\",\\r\\n            \\\"startedDateTime\\\": \\\"{todayMinusHour}\\\",\\r\\n            \\\"lastActiveDateTime\\\": \\\"{today}\\\"\\r\\n        }\\r\\n    ]\\r\\n}\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"User Activities\",\n      \"method\": \"GET\",\n      \"humanName\": \"get recent user activities\",\n      \"requestUrl\": \"/v1.0/me/activities/recent\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/v1.0/api/projectrome_get_recent_activities\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"retrieve the list of applications\",\n      \"requestUrl\": \"/beta/applications\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_list\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a new application\",\n      \"requestUrl\": \"/beta/applications\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_post_applications\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"displayName\\\": \\\"My App\\\"\\r\\n    }\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"retrieve application properties\",\n      \"requestUrl\": \"/beta/applications/{application-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_get\",\n      \"tip\": \"This query requires an application id. To find the ID of an application&#44; you can run: GET https://graph.microsoft.com/beta/applications\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"PATCH\",\n      \"humanName\": \"update application properties\",\n      \"requestUrl\": \"/beta/applications/{application-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_update\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"signInAudience\\\": \\\"AzureADMyOrg\\\"\\r\\n    }\",\n      \"tip\": \"This query requires an application id. To find the ID of an application&#44; you can run: GET https://graph.microsoft.com/beta/applications\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"DELETE\",\n      \"humanName\": \"delete an application\",\n      \"requestUrl\": \"/beta/applications/{application-id}\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_delete\",\n      \"tip\": \"This query requires an application id. To find the ID of an application&#44; you can run: GET https://graph.microsoft.com/beta/applications\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"GET\",\n      \"humanName\": \"retrieve a list of owners\",\n      \"requestUrl\": \"/beta/applications/{application-id}/owners\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_list_owners\",\n      \"tip\": \"This query requires an application id. To find the ID of an application&#44; you can run: GET https://graph.microsoft.com/beta/applications\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Applications (beta)\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a new owner\",\n      \"requestUrl\": \"/beta/applications/{application-id}/owners\",\n      \"docLink\": \"https://developer.microsoft.com/en-us/graph/docs/api-reference/beta/api/application_post_owners\",\n      \"headers\": [\n          {\n              \"name\": \"Content-type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n        \\\"directoryObject\\\": {\\r\\n        }\\r\\n    }\",\n      \"tip\": \"This query requires an application id. To find the ID of an application&#44; you can run: GET https://graph.microsoft.com/beta/applications. In the request body supply a JSON representation of directoryObject object\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Notifications (beta)\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a raw notification\",\n      \"requestUrl\": \"/beta/me/notifications\",\n      \"docLink\": \"https://aka.ms/graphNotificationsDocs\",\n      \"headers\": [\n          {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"targetHostName\\\": \\\"graphnotifications.sample.windows.com\\\",\\r\\n  \\\"appNotificationId\\\": \\\"sampleRawNotification\\\",\\r\\n  \\\"payload\\\": {\\r\\n    \\\"rawContent\\\": \\\"Hello World!\\\"\\r\\n  },\\r\\n  \\\"targetPolicy\\\": {\\r\\n    \\\"platformTypes\\\": [\\r\\n      \\\"windows\\\",\\r\\n      \\\"ios\\\",\\r\\n      \\\"android\\\"\\r\\n    ]\\r\\n  },\\r\\n  \\\"priority\\\": \\\"High\\\",\\r\\n  \\\"displayTimeToLive\\\": \\\"60\\\"\\r\\n}\",\n      \"tip\": \"Please enable the Notifications.ReadWrite.CreatedByApp permission in order to use this query.  A raw notification is a notification that is received by the application and processed in an application specific manner.  A raw notification may or may not include UI/UX for the user. Note - This query will only work with a sample application by default. See https://aka.ms/projectRomeSamples/ for additional info.\",\n      \"skipTest\": false\n  },\n  {\n      \"category\": \"Notifications (beta)\",\n      \"method\": \"POST\",\n      \"humanName\": \"create a visual notification\",\n      \"requestUrl\": \"/beta/me/notifications\",\n      \"docLink\": \"https://aka.ms/graphNotificationsDocs\",\n      \"headers\": [\n          {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n          }\n      ],\n      \"postBody\": \"{\\r\\n  \\\"targetHostName\\\": \\\"graphnotifications.sample.windows.com\\\",\\r\\n  \\\"appNotificationId\\\": \\\"sampleDirectToastNotification\\\",\\r\\n  \\\"payload\\\": {\\r\\n    \\\"visualContent\\\": {\\r\\n      \\\"title\\\": \\\"Hello World!\\\",\\r\\n      \\\"body\\\": \\\"Notifications are Great!\\\"\\r\\n    }\\r\\n  },\\r\\n  \\\"targetPolicy\\\": {\\r\\n    \\\"platformTypes\\\": [\\r\\n      \\\"windows\\\",\\r\\n      \\\"ios\\\",\\r\\n      \\\"android\\\"\\r\\n    ]\\r\\n  },\\r\\n  \\\"priority\\\": \\\"High\\\",\\r\\n  \\\"displayTimeToLive\\\": \\\"60\\\"\\r\\n}\",\n      \"tip\": \"Please enable the Notifications.ReadWrite.CreatedByApp permission in order to use this query.  A visual notification is a notification that a user can see by default within the notification center of the target platform. Note - This query will only work with a sample application by default. See https://aka.ms/projectRomeSamples/ for additional info.\",\n      \"skipTest\": false\n  }]","import { IAction } from '../../../types/action';\nimport { queries } from '../../views/sidebar/sample-queries/queries';\nimport { SAMPLES_FETCH_ERROR, SAMPLES_FETCH_PENDING, SAMPLES_FETCH_SUCCESS } from '../redux-constants';\n\nconst initialState = {\n  pending: false,\n  queries: [],\n  error: null\n};\n\nexport function samples(state = initialState, action: IAction): any {\n  switch (action.type) {\n    case SAMPLES_FETCH_PENDING:\n      return {\n        ...state,\n        pending: true\n      };\n    case SAMPLES_FETCH_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        queries: action.response\n      };\n    case SAMPLES_FETCH_ERROR:\n      return {\n        ...state,\n        pending: false,\n        queries,\n        error: action.response\n      };\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { QUERY_GRAPH_RUNNING, SET_SAMPLE_QUERY_SUCCESS,\n  TOGGLE_SIDEBAR_SUCCESS, VIEW_HISTORY_ITEM_SUCCESS } from '../redux-constants';\n\nconst initialState = {\n  showSidebar: false,\n  showToggle: false,\n};\n\nexport function sidebarProperties(state = initialState, action: IAction): any {\n  switch (action.type) {\n    case TOGGLE_SIDEBAR_SUCCESS:\n      return action.response;\n    case QUERY_GRAPH_RUNNING:\n      if (state.showToggle) {\n        return {\n          ...state,\n          showSidebar: false,\n        };\n      }\n    case SET_SAMPLE_QUERY_SUCCESS:\n      if (state.showToggle) {\n        return {\n          ...state,\n          showSidebar: false,\n        };\n      }\n    case VIEW_HISTORY_ITEM_SUCCESS:\n      if (state.showToggle) {\n        return {\n          ...state,\n          showSidebar: false,\n        };\n      }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { adaptiveCard } from './adaptive-cards-reducer';\nimport { authToken } from './auth-reducers';\nimport { graphExplorerMode } from './graph-explorer-mode-reducer';\nimport { sampleQuery } from './query-input-reducers';\nimport { isLoadingData } from './query-loading-reducers';\nimport { queryRunnerError } from './query-runner-error';\nimport { graphResponse } from './query-runner-reducers';\nimport { headersAdded } from './request-headers-reducers';\nimport { history } from './request-history-reducers';\nimport { samples } from './samples-reducers';\nimport { snippets } from './snippet-reducer';\nimport { theme } from './theme-reducer';\nimport { sidebarProperties } from './toggle-sidebar-reducer';\n\nexport default combineReducers({ \n  adaptiveCard,\n  authToken,\n  graphExplorerMode,\n  graphResponse,\n  headersAdded,\n  history,\n  isLoadingData,\n  queryRunnerError,\n  sampleQuery,\n  samples,\n  sidebarProperties,\n  snippets,\n  theme,\n});\n","import { IAction } from '../../../types/action';\nimport { GET_AUTH_TOKEN_SUCCESS, LOGOUT_SUCCESS } from '../redux-constants';\n\nexport function authToken(state = {}, action: IAction): string|object {\n    switch (action.type) {\n        case GET_AUTH_TOKEN_SUCCESS:\n            return action.response;\n        case LOGOUT_SUCCESS:\n            return action.response;\n        default:\n            return state;\n    }\n}\n","import { IAction, Mode } from '../../../types/action';\nimport { SET_GRAPH_EXPLORER_MODE_SUCCESS } from '../redux-constants';\n\nexport function graphExplorerMode(state = Mode.Complete, action: IAction): any {\n  switch (action.type) {\n    case SET_GRAPH_EXPLORER_MODE_SUCCESS:\n      return action.response;\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { CLEAR_RESPONSE, QUERY_GRAPH_ERROR, QUERY_GRAPH_SUCCESS,\n  SET_SAMPLE_QUERY_SUCCESS, VIEW_HISTORY_ITEM_SUCCESS } from '../redux-constants';\n\nexport function graphResponse(state = {}, action: IAction): any {\n  switch (action.type) {\n    case QUERY_GRAPH_SUCCESS:\n      return action.response;\n    case VIEW_HISTORY_ITEM_SUCCESS:\n      return action.response;\n    case QUERY_GRAPH_ERROR:\n      return { body: {}, headers: {} };\n    case SET_SAMPLE_QUERY_SUCCESS:\n      return { body: undefined, headers: undefined };\n    case CLEAR_RESPONSE:\n        return { body: undefined, headers: undefined };\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { HEADER_ADD_SUCCESS, HEADER_REMOVE_SUCCESS } from '../redux-constants';\n\nexport function headersAdded(state = [], action: IAction): any {\n  switch (action.type) {\n    case HEADER_ADD_SUCCESS:\n      return action.response;\n    case HEADER_REMOVE_SUCCESS:\n      let headers: any = [];\n      headers = state.filter(header => header !== action.response);\n      return headers;\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { IHistoryItem } from '../../../types/history';\nimport { ADD_HISTORY_ITEM_SUCCESS, REMOVE_HISTORY_ITEM_SUCCESS } from '../redux-constants';\n\nexport function history(state: any[] = [], action: IAction): any {\n  switch (action.type) {\n    case ADD_HISTORY_ITEM_SUCCESS:\n      let historyItems = [...state, action.response];\n      historyItems = historyItems.reduce((current, compare) => {\n        return current.findIndex((historyItem: IHistoryItem) => {\n          return historyItem.createdAt === compare.createdAt;\n        }) < 0 ? [...current, compare] : current;\n      }, []);\n\n      return historyItems;\n\n    case REMOVE_HISTORY_ITEM_SUCCESS:\n      return state.filter(historyItem => historyItem !== action.response);\n\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport {\n  PROFILE_REQUEST_ERROR, PROFILE_REQUEST_SUCCESS,\n  QUERY_GRAPH_ERROR, QUERY_GRAPH_RUNNING, QUERY_GRAPH_SUCCESS\n} from '../redux-constants';\n\nexport function isLoadingData(state = {}, action: IAction): any {\n  switch (action.type) {\n    case QUERY_GRAPH_RUNNING:\n      if (action.response) {\n        return action.response;\n      }\n    case QUERY_GRAPH_SUCCESS:\n      return false;\n    case QUERY_GRAPH_ERROR:\n      return false;\n    case PROFILE_REQUEST_ERROR:\n      return false;\n    case PROFILE_REQUEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { CLEAR_QUERY_ERROR, QUERY_GRAPH_ERROR, QUERY_GRAPH_SUCCESS } from '../redux-constants';\n\nexport function queryRunnerError(state = {}, action: IAction): any {\n  switch (action.type) {\n    case QUERY_GRAPH_ERROR:\n      return action.response;\n    case QUERY_GRAPH_SUCCESS:\n      return null;\n    case CLEAR_QUERY_ERROR:\n      return null;\n    default:\n      return state;\n  }\n}\n","import { IAction } from '../../../types/action';\nimport { SET_SAMPLE_QUERY_SUCCESS } from '../redux-constants';\n\nexport function sampleQuery(state = {}, action: IAction): any {\n  switch (action.type) {\n    case SET_SAMPLE_QUERY_SUCCESS:\n      return action.response;\n    default:\n      return state;\n  }\n}","import { IAction } from '../../../types/action';\nimport { GET_SNIPPET_SUCCESS } from '../redux-constants';\n\nexport function snippets(state = {}, action: IAction): any {\n    switch (action.type) {\n        case GET_SNIPPET_SUCCESS:\n            return { ...state, ...action.response as object };\n        default:\n            return state;\n    }\n}","import { IAction } from '../../../types/action';\nimport { CHANGE_THEME_SUCCESS } from '../redux-constants';\n\nexport function theme(state = {}, action: IAction): string | object {\n  switch (action.type) {\n    case CHANGE_THEME_SUCCESS:\n      return action.response;\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport localStorageMiddleware from '../app/middleware/localStorageMiddleware';\nimport reducers from '../app/services/reducers';\n\nconst loggerMiddleware = createLogger({\n    level: 'error',\n    collapsed: true,\n});\n\nconst { NODE_ENV } = process.env;\n\nconst middlewares = [thunkMiddleware, localStorageMiddleware];\n\nif (NODE_ENV === 'development') {\n    middlewares.push(loggerMiddleware);\n}\n\nexport const store =  (initialState: object): Store => {\n    return createStore(\n        reducers,\n        initialState,\n        applyMiddleware(...middlewares),\n        );\n};\n","import 'bootstrap/dist/css/bootstrap-grid.min.css';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport br from 'react-intl/locale-data/br';\nimport de from 'react-intl/locale-data/de';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\nimport fr from 'react-intl/locale-data/fr';\nimport jp from 'react-intl/locale-data/ja';\nimport ru from 'react-intl/locale-data/ru';\nimport zh from 'react-intl/locale-data/zh';\nimport { Provider } from 'react-redux';\n\nimport { getAuthTokenSuccess, setGraphExplorerMode } from './app/services/actions/auth-action-creators';\nimport { addHistoryItem } from './app/services/actions/request-history-action-creators';\nimport { changeTheme } from './app/services/actions/theme-action-creator';\nimport { HelloAuthProvider } from './app/services/graph-client/HelloAuthProvider';\nimport App from './app/views/App';\nimport messages from './messages';\nimport { store } from './store';\nimport { readData } from './store/cache';\nimport './styles/index.scss';\nimport { loadGETheme } from './themes';\nimport { Mode } from './types/action';\nimport { IHistoryItem } from './types/history';\n\nconst spinner = document.getElementById('spinner');\n\nif (spinner !== null) {\n  (spinner as any).parentElement.removeChild(spinner);\n}\n\ninitializeIcons();\n\nconst appState = store({\n  authToken: '',\n  theme: 'light',\n  isLoadingData: false,\n  queryRunnerError: null,\n  headersAdded: [{ name: '', value: '' }],\n  sampleQuery: {\n    sampleUrl: 'https://graph.microsoft.com/v1.0/me/',\n    selectedVerb: 'GET',\n    sampleBody: undefined,\n    sampleHeaders: {},\n  },\n});\n\n\nnew HelloAuthProvider().getAccessToken()\n  .then((token) => {\n    if (token) {\n      appState.dispatch(getAuthTokenSuccess(token));\n    }\n  });\n\n\nconst localeMap: any = {\n  'de-de': 'de-DE',\n  'en-us': 'en-US',\n  'es-es': 'es-ES',\n  'fr-fr': 'fr-FR',\n  'ja-jp': 'ja-JP',\n  'pt-br': 'pt-BR',\n  'ru-ru': 'ru-RU',\n  'zh-cn': 'zh-CN'\n};\nconst hostDocumentLocale = new URLSearchParams(location.search).get('locale');\nconst geLocale = hostDocumentLocale && localeMap[hostDocumentLocale] || 'en-US';\n\naddLocaleData([\n  ...br,\n  ...de,\n  ...en,\n  ...fr,\n  ...jp,\n  ...ru,\n  ...zh,\n  ...es,\n]);\n\n\nconst theme = new URLSearchParams(location.search).get('theme');\n\nif (theme) {\n  loadGETheme(theme);\n  appState.dispatch(changeTheme(theme));\n}\n\nif (hostDocumentLocale) {\n  appState.dispatch(setGraphExplorerMode(Mode.TryIt));\n}\n\nreadData().then((data: any) => {\n  if (data.length > 0) {\n    data.forEach((element: IHistoryItem) => {\n      appState.dispatch(addHistoryItem(element));\n    });\n  }\n});\n\nconst Root = () => {\n  return (\n    <Provider store={appState}>\n      <IntlProvider locale={geLocale} messages={(messages as { [key: string]: object })[geLocale]}>\n        <App />\n      </IntlProvider>\n    </Provider>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}